{"version":3,"sources":["components/add-food/list/food-list.module.css","components/add-food/form/food-input.module.css","components/add-food/form/food-form.module.css","components/user-form/base-input.module.css","components/add-food/form/food-tag.module.css","components/user-form/base-form.module.css","components/add-food/form/food-tags.module.css","components/add-food/list/food-error.module.css","components/add-food/list/food-success.module.css","components/add-food/list/food-item-overlay.module.css","components/add-food/form/show-food-form-button.module.css","pages/app/app.module.css","state.js","components/add-food/form/food-submit.js","components/add-food/form/food-cancel.js","components/add-food/form/food-input.js","components/add-food/form/food-tag.js","components/add-food/form/food-tags.js","components/add-food/constants.js","components/add-food/form/food-form.js","components/add-food/list/food-error.js","components/add-food/list/food-success.js","components/add-food/list/food-list-headers.js","components/add-food/list/food-item-overlay.js","components/add-food/list/food-list-item.js","components/add-food/list/food-list-items.js","components/add-food/list/food-loading.js","components/add-food/list/food-list.js","components/add-food/form/show-food-form-button.js","components/nav/nav-logout.js","components/nav/nav.js","pages/add-food/add-food.js","pages/game/game.js","components/auth/utils/index.js","components/user-form/base-flip-form.js","components/user-form/base-input.js","components/user-form/base-submit.js","components/user-form/base-form.js","components/user-form/login-form.js","pages/login/login.js","components/user-form/register-form.js","pages/register/register.js","components/auth/auth-admin.js","pages/login/admin-login.js","pages/app/app.js","reportWebVitals.js","index.js"],"names":["module","exports","useGlobalState","createGlobalState","showAddFoodForm","addFoodFormFetched","addFoodFormDisabled","addFoodFormEditable","addFoodFormError","addFoodFormSuccess","addFoodFormFoods","addFoodFormSelectedFood","addFoodFormData","showAddFoodFormItemOverlay","loginFormData","loginFormError","loginFormSuccess","loginFormDisabled","registerFormData","registerFormError","registerFormSuccess","registerFormDisabled","loggedIn","isAdmin","currentUser","FoodSubmit","type","value","disabled","FoodCancel","setAddFoodFormSelectedFood","setShowAddFoodForm","setAddFoodFormDisabled","onClick","FoodInput","name","label","handleInputChange","className","styles","foodRow","short","foodLabel","above","foodInput","checked","onChange","placeholder","FoodTag","tag","useState","used","setUsed","setAddFoodFormData","useEffect","i","length","foodTag","newTags","filter","oldTag","push","tags","FoodTags","fetchedTags","setFetchedTags","formTags","setFormTags","setAddFoodFormError","fetchTags","a","localStorage","getItem","cachedTags","JSON","parse","fetch","req","ok","status","statusText","json","resp","success","data","setItem","stringify","tagsList","map","foodTags","foodLabels","gluten","glutenExplanation","fructose","fructoseExplanation","lactose","lactoseExplanation","price","baseHunger","baseHealth","breakfast","lunch","dinner","baseFormData","FoodForm","setAddFoodFormFetched","setAddFoodFormSuccess","resetFormData","useCallback","activeInputs","foodInputs","input","props","validateForm","handleFormSubmit","e","preventDefault","method","mode","cache","credentials","headers","body","error","target","parseInt","Object","entries","key","test","foodFormModalOverlay","foodFormModal","foodFormContainer","foodForm","onSubmit","foodButtons","FormError","foodError","FoodSuccess","foodSuccess","FoodListHeaders","foodListHeaders","values","header","foodListFields","foodListItem","FoodItemOverlay","_id","setAddFoodFormEditable","handleClickEdit","filtered","mapped","assign","handleClickDelete","foodItemOverlay","FoodListItem","food","index","setShowAddFoodFormItemOverlay","foodFields","formatted","slice","green","FoodListItems","foodListItems","FoodLoading","FoodList","setAddFoodFormFoods","fetchFoods","setTimeout","foodList","ShowFoodFormButton","showFoodFormButton","NavLogout","setLoggedIn","setCurrentUser","history","useHistory","handleLogout","console","log","message","Nav","AddFood","Game","username","isAuthorized","isAdminAuthorized","BaseFlipForm","pathname","useLocation","to","BaseInput","baseInputRow","baseLabel","baseInput","BaseSubmit","BaseForm","formType","formData","baseForm","email","password","baseButtons","LoginForm","adminRequired","setLoginFormData","setLoginFormError","setLoginFormSuccess","setLoginFormDisabled","setIsAdmin","historyState","loaded","setLoaded","handleLogin","state","from","Login","RegisterForm","setRegisterFormData","setRegisterFormError","setRegisterFormSuccess","setRegisterFormDisabled","handleRegister","Register","AdminAuthorized","location","AdminLogin","App","authStatus","getLoginStatus","app","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eb69bc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodList\":\"food-list_foodList__1reRd\",\"foodListItems\":\"food-list_foodListItems__Vom0L\",\"foodListItem\":\"food-list_foodListItem__2AAim\",\"foodListFields\":\"food-list_foodListFields__1drop\",\"headers\":\"food-list_headers__1zgGb\",\"green\":\"food-list_green__3Ei-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodRow\":\"food-input_foodRow__3FaJC\",\"foodLabel\":\"food-input_foodLabel__36i1a\",\"short\":\"food-input_short__DWUPW\",\"above\":\"food-input_above__3tFye\",\"foodInput\":\"food-input_foodInput__3PEmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodFormModal\":\"food-form_foodFormModal__1i0xW\",\"foodFormModalOverlay\":\"food-form_foodFormModalOverlay__1g29t\",\"foodFormContainer\":\"food-form_foodFormContainer__3VGNq\",\"foodForm\":\"food-form_foodForm__2gEtH\",\"foodButtons\":\"food-form_foodButtons__2Aahn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseInputRow\":\"base-input_baseInputRow__11po3\",\"baseLabel\":\"base-input_baseLabel__2FYvB\",\"above\":\"base-input_above__MO3Bh\",\"baseInput\":\"base-input_baseInput__ABmzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodTag\":\"food-tag_foodTag__2pFO_\",\"used\":\"food-tag_used__1-LlO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseForm\":\"base-form_baseForm__fFcGB\",\"baseButtons\":\"base-form_baseButtons__edZZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodTags\":\"food-tags_foodTags__38xGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodError\":\"food-error_foodError__2Xmmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodSuccess\":\"food-success_foodSuccess__3NQQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodItemOverlay\":\"food-item-overlay_foodItemOverlay__20Ma9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showFoodFormButton\":\"show-food-form-button_showFoodFormButton__1oBC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__Ohz0O\"};","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  showAddFoodForm: false,\n  addFoodFormFetched: false,\n  addFoodFormDisabled: false,\n  addFoodFormEditable: false,\n  addFoodFormError: '',\n  addFoodFormSuccess: '',\n  addFoodFormFoods: [],\n  addFoodFormSelectedFood: '',\n  addFoodFormData: {},\n  showAddFoodFormItemOverlay: -1,\n  loginFormData: {},\n  loginFormError: '',\n  loginFormSuccess: '',\n  loginFormDisabled: false,\n  registerFormData: {},\n  registerFormError: '',\n  registerFormSuccess: '',\n  registerFormDisabled: false,\n  loggedIn: false,\n  isAdmin: false,\n  currentUser: {},\n};\n\nexport const { useGlobalState } = createGlobalState(initialState);\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodSubmit() {\n  const [addFoodFormDisabled] = useGlobalState('addFoodFormDisabled');\n  return <input type=\"submit\" value=\"Submit\" disabled={addFoodFormDisabled} />;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodCancel() {\n  const [, setAddFoodFormSelectedFood] = useGlobalState(\n    'addFoodFormSelectedFood',\n  );\n  const [, setShowAddFoodForm] = useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormDisabled] = useGlobalState('addFoodFormDisabled');\n\n  const handleClick = () => {\n    setAddFoodFormSelectedFood('');\n    setShowAddFoodForm(false);\n    setAddFoodFormDisabled(true);\n  };\n\n  return <button onClick={handleClick}>Cancel</button>;\n}\n","import React from 'react';\n\nimport styles from './food-input.module.css';\n\nexport default function FoodInput({\n  name,\n  label,\n  type,\n  value,\n  handleInputChange,\n  disabled,\n}) {\n  return (\n    <>\n      <label\n        className={`${styles.foodRow} ${type === 'checkbox' && styles.short}`}>\n        <span\n          className={`${styles.foodLabel} ${\n            (type === 'text' || type === 'number') && styles.above\n          }`}>\n          {label}\n        </span>\n        <input\n          className={`${styles.foodInput}`}\n          name={name}\n          type={type}\n          value={value}\n          checked={value}\n          onChange={handleInputChange}\n          placeholder={`${label} cannot be ${\n            type === 'number' ? 'zero' : 'blank'\n          }`}\n          disabled={disabled}\n        />\n      </label>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-tag.module.css';\n\nexport default function FoodTag({ tag }) {\n  const [used, setUsed] = useState(false);\n  const [addFoodFormData, setAddFoodFormData] =\n    useGlobalState('addFoodFormData');\n  const [addFoodFormEditable] = useGlobalState('addFoodFormEditable');\n\n  // check if current tag is already in the formdata, then set it to used\n  // this is only checked when editing existing an existing dish\n  useEffect(() => {\n    if (addFoodFormEditable) {\n      for (let i = 0; i < addFoodFormData['tags'].length; i += 1) {\n        if (addFoodFormData['tags'][i] === tag) {\n          setUsed(true);\n        }\n      }\n    }\n  }, [addFoodFormData, addFoodFormEditable, tag, setUsed]);\n\n  const handleClick = () => {\n    // copy the existing tags used in the form\n    let newTags = [...addFoodFormData['tags']];\n    if (used) {\n      // if the current tag is used, remove it from the form's tags\n      newTags = newTags.filter((oldTag) => oldTag !== tag);\n      setUsed(false);\n    } else {\n      // otherwise, add it to the form's tags\n      newTags.push(tag);\n      setUsed(true);\n    }\n\n    // update the form data with new tags array\n    setAddFoodFormData({\n      ...addFoodFormData,\n      tags: newTags,\n    });\n  };\n\n  return (\n    <span\n      className={`${styles.foodTag} ${used && styles.used}`}\n      onClick={handleClick}>\n      {tag}\n    </span>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport FoodTag from './food-tag';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-tags.module.css';\n\nexport default function FoodTags() {\n  const [fetchedTags, setFetchedTags] = useState(false);\n  const [formTags, setFormTags] = useState([]);\n  const [setAddFoodFormError] = useGlobalState('addFoodFormError');\n\n  const fetchTags = async () => {\n    // check cache\n    if (localStorage.getItem('tags')) {\n      const cachedTags = JSON.parse(localStorage.getItem('tags'));\n      setFormTags(cachedTags);\n      return setFetchedTags(true);\n    }\n\n    // otherwise make fresh data request\n    const req = await fetch('/api/tag/all');\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n\n    if (success) {\n      // first cache the data\n      localStorage.setItem('tags', JSON.stringify(data));\n      setFormTags(data);\n      setFetchedTags(true);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n      setFetchedTags(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!fetchedTags) {\n      fetchTags();\n    }\n  });\n\n  const tagsList = formTags?.map(({ tag }, i) => {\n    return <FoodTag key={`Tag_${i}`} tag={tag} />;\n  });\n\n  return (\n    <>\n      <section className={styles.foodTags}>{tagsList}</section>\n    </>\n  );\n}\n","export const foodLabels = {\n  name: 'Name',\n  gluten: 'Gluten',\n  glutenExplanation: 'Gluten Explanation',\n  fructose: 'Fructose',\n  fructoseExplanation: 'Fructose Explanation',\n  lactose: 'Lactose',\n  lactoseExplanation: 'Lactose Explanation',\n  price: 'Price',\n  baseHunger: 'Base Hunger',\n  baseHealth: 'Base Health',\n  breakfast: 'Breakfast',\n  lunch: 'Lunch',\n  dinner: 'Dinner',\n  tags: 'Tags',\n};\n\nexport const baseFormData = {\n  name: '',\n  gluten: 1,\n  glutenExplanation: '',\n  fructose: false,\n  fructoseExplanation: '',\n  lactose: false,\n  lactoseExplanation: '',\n  price: 1,\n  baseHunger: 1,\n  baseHealth: 1,\n  breakfast: false,\n  lunch: false,\n  dinner: false,\n  tags: [],\n};\n","import React, { useCallback, useEffect } from 'react';\n\nimport FoodSubmit from './food-submit';\nimport FoodCancel from './food-cancel';\nimport FoodInput from './food-input';\nimport FoodTags from './food-tags';\nimport { foodLabels, baseFormData } from '../constants';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-form.module.css';\n\nexport default function FoodForm() {\n  const [, setAddFoodFormFetched] = useGlobalState('addFoodFormFetched');\n  const [, setAddFoodFormDisabled] = useGlobalState('addFoodFormDisabled');\n  const [, setShowAddFoodForm] = useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormError] = useGlobalState('addFoodFormError');\n  const [, setAddFoodFormSuccess] = useGlobalState('addFoodFormSuccess');\n  const [addFoodFormEditable] = useGlobalState('addFoodFormEditable');\n  const [addFoodFormData, setAddFoodFormData] =\n    useGlobalState('addFoodFormData');\n  const [addFoodFormSelectedFood, setAddFoodFormSelectedFood] = useGlobalState(\n    'addFoodFormSelectedFood',\n  );\n\n  const resetFormData = useCallback(() => {\n    setAddFoodFormData(baseFormData);\n  }, [setAddFoodFormData]);\n\n  // generate a blank form if not editing an existing food\n  useEffect(() => {\n    if (!addFoodFormEditable) {\n      resetFormData();\n    }\n  }, [resetFormData, addFoodFormEditable]);\n\n  const validateForm = () => {\n    // filter out unused inputs\n    const activeInputs = foodInputs.filter((input) => input !== null);\n    for (let i = 0; i < activeInputs.length; i += 1) {\n      const { type, value } = activeInputs[i].props;\n      // ignore checkboxes and check for blanks\n      if (type !== 'checkbox' && !value) {\n        return setAddFoodFormDisabled(true);\n      }\n    }\n    return setAddFoodFormDisabled(false);\n  };\n\n  // validate form on every change\n  useEffect(() => {\n    validateForm();\n  });\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    setAddFoodFormDisabled(true);\n    let req;\n    if (!addFoodFormEditable) {\n      // if not editing existing data, send new POST request\n      req = await fetch('/api/food/one', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(addFoodFormData),\n      });\n    } else {\n      // otherwise, send PUT request\n      req = await fetch(`/api/food/one/${addFoodFormSelectedFood}`, {\n        method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(addFoodFormData),\n      });\n    }\n\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n\n    const resp = await req.json();\n\n    if (resp.success) {\n      resetFormData();\n      setAddFoodFormFetched(false);\n      setShowAddFoodForm(false);\n      setAddFoodFormSelectedFood('');\n      return setAddFoodFormSuccess(`Success: ${resp.data.name} was edited.`);\n    } else {\n      setAddFoodFormDisabled(false);\n      return setAddFoodFormError(\n        `Error: ${resp.error}. Please try again later.`,\n      );\n    }\n  };\n\n  const handleInputChange = (e) => {\n    let value = e.target.value;\n    // make sure we are using the right value type\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    } else if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setAddFoodFormData({\n      ...addFoodFormData,\n      [e.target.name]: value,\n    });\n  };\n\n  const foodInputs = Object.entries(addFoodFormData)\n    // filter out mongoDB _ keys\n    ?.filter(([key]) => !/_/.test(key))\n    ?.map(([key, value]) => {\n      // render inputs dynamically based on form data structure\n      let type = 'text';\n      // assign different input type based on input value type\n      if (typeof value === 'boolean') {\n        type = 'checkbox';\n      } else if (typeof value === 'number') {\n        type = 'number';\n      }\n      // hide explanation inputs if not applicable\n      if (key === 'glutenExplanation' && !addFoodFormData['gluten']) {\n        return null;\n      }\n      if (key === 'fructoseExplanation' && !addFoodFormData['fructose']) {\n        return null;\n      }\n      if (key === 'lactoseExplanation' && !addFoodFormData['lactose']) {\n        return null;\n      }\n      return (\n        <FoodInput\n          key={key}\n          name={key}\n          label={foodLabels[key]}\n          type={type}\n          value={addFoodFormData[key]}\n          handleInputChange={handleInputChange}\n          disabled={key === 'tags'}\n        />\n      );\n    });\n\n  return (\n    <>\n      <div className={styles.foodFormModalOverlay} />\n      <article className={styles.foodFormModal}>\n        <div className={styles.foodFormContainer}>\n          <h2>{addFoodFormEditable ? 'Edit a dish' : 'Add a dish'}</h2>\n          <form className={styles.foodForm} onSubmit={handleFormSubmit}>\n            {foodInputs}\n            <FoodTags />\n            <section className={styles.foodButtons}>\n              <FoodSubmit />\n              <FoodCancel />\n            </section>\n          </form>\n        </div>\n      </article>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-error.module.css';\n\nexport default function FormError() {\n  const [addFoodFormError] = useGlobalState('addFoodFormError');\n  return <span className={styles.foodError}>{addFoodFormError}</span>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-success.module.css';\n\nexport default function FoodSuccess() {\n  const [addFoodFormSuccess] = useGlobalState('addFoodFormSuccess');\n  return <span className={styles.foodSuccess}>{addFoodFormSuccess}</span>;\n}\n","import React from 'react';\n\nimport { foodLabels } from '../constants';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListHeaders() {\n  const foodListHeaders = Object.values(foodLabels)\n    // filter out the explanation fields, no need to show them\n    ?.filter((label) => !/Explanation/.test(label))\n    ?.map((header, i) => (\n      <span\n        className={`${styles.foodListFields} ${styles.headers}`}\n        key={`Header_${i}`}>\n        {header}\n      </span>\n    ));\n  return <section className={styles.foodListItem}>{foodListHeaders}</section>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\nimport { baseFormData } from '../constants';\n\nimport styles from './food-item-overlay.module.css';\n\nexport default function FoodItemOverlay({ _id }) {\n  const [, setAddFoodFormError] = useGlobalState('addFoodFormError');\n  const [, setAddFoodFormData] = useGlobalState('addFoodFormData');\n  const [, setAddFoodFormEditable] = useGlobalState('addFoodFormEditable');\n  const [, setShowAddFoodForm] = useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormFetched] = useGlobalState('addFoodFormFetched');\n  const [, setAddFoodFormSuccess] = useGlobalState('addFoodFormSuccess');\n  const [, setAddFoodFormSelectedFood] = useGlobalState(\n    'addFoodFormSelectedFood',\n  );\n\n  const handleClickEdit = async () => {\n    const req = await fetch(`/api/food/one/${_id}`);\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      // filter out mongoDB _ keys\n      const filtered = Object.entries(data)?.filter(([key]) => !/_/.test(key));\n      // map fetched data to form data shape\n      const mapped = Object.assign({}, baseFormData);\n      for (let i = 0; i < filtered.length; i += 1) {\n        const [key, value] = filtered[i];\n        mapped[key] = value;\n      }\n      setAddFoodFormSelectedFood(_id);\n      setAddFoodFormData(mapped);\n      setAddFoodFormEditable(true);\n      setShowAddFoodForm(true);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  const handleClickDelete = async () => {\n    const req = await fetch(`/api/food/one/${_id}`, {\n      method: 'DELETE',\n    });\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setAddFoodFormFetched(false);\n      setAddFoodFormSuccess(`Success: ${data.name} was deleted.`);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  return (\n    <section className={styles.foodItemOverlay}>\n      <button onClick={handleClickEdit}>Edit</button>\n      <button onClick={handleClickDelete}>Delete</button>\n    </section>\n  );\n}\n","import React from 'react';\n\nimport FoodItemOverlay from './food-item-overlay';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItem({ food, index }) {\n  const { _id } = food;\n\n  const [showAddFoodFormItemOverlay, setShowAddFoodFormItemOverlay] =\n    useGlobalState('showAddFoodFormItemOverlay');\n\n  const handleShowFoodItemOverlay = () => {\n    if (showAddFoodFormItemOverlay === index) {\n      return setShowAddFoodFormItemOverlay(-1);\n    }\n    return setShowAddFoodFormItemOverlay(index);\n  };\n\n  // filter out unused fields (explanation fields and mongoDB fields)\n  const foodFields = Object.entries(food)\n    ?.filter(([key]) => !/Explanation|_/.test(key))\n    ?.map(([key, value], i) => {\n      let formatted = value;\n      if (typeof value === 'string' && value.length > 32) {\n        formatted = value.slice(0, 29) + `...`;\n      }\n      return (\n        <span\n          key={`Value_${i}`}\n          className={`${styles.foodListFields} ${\n            value === true && styles.green\n          }`}>\n          {typeof value === 'string' ? formatted : JSON.stringify(value)}\n        </span>\n      );\n    });\n\n  return (\n    <article\n      onClick={handleShowFoodItemOverlay}\n      className={styles.foodListItem}>\n      {foodFields}\n      {showAddFoodFormItemOverlay === index && <FoodItemOverlay _id={_id} />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport FoodListItem from './food-list-item';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItems() {\n  const [addFoodFormFoods] = useGlobalState('addFoodFormFoods');\n  const foodListItems = addFoodFormFoods?.map((food, i) => {\n    return <FoodListItem key={`Item_${i}`} food={food} index={i} />;\n  });\n  return <section className={styles.foodListItems}>{foodListItems}</section>;\n}\n","import React from 'react';\n\nexport default function FoodLoading() {\n  return <span>Please wait, loading...</span>;\n}\n","import React, { useEffect } from 'react';\n\nimport FoodError from './food-error';\nimport FoodSuccess from './food-success';\nimport FoodListHeaders from './food-list-headers';\nimport FoodListItems from './food-list-items';\nimport FoodLoading from './food-loading';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodList() {\n  const [, setAddFoodFormFoods] = useGlobalState('addFoodFormFoods');\n  const [addFoodFormFetched, setAddFoodFormFetched] =\n    useGlobalState('addFoodFormFetched');\n  const [addFoodFormError, setAddFoodFormError] =\n    useGlobalState('addFoodFormError');\n  const [addFoodFormSuccess, setAddFoodFormSuccess] =\n    useGlobalState('addFoodFormSuccess');\n\n  const fetchFoods = async () => {\n    const req = await fetch('/api/food/all');\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setAddFoodFormFoods(data);\n      setAddFoodFormFetched(true);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n      setAddFoodFormFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!addFoodFormFetched) {\n      fetchFoods();\n    }\n  });\n\n  useEffect(() => {\n    if (addFoodFormSuccess) {\n      setTimeout(() => setAddFoodFormSuccess(''), 3000);\n    }\n    if (addFoodFormError) {\n      setTimeout(() => setAddFoodFormError(''), 5000);\n    }\n  });\n\n  return (\n    <article className={styles.foodList}>\n      <h2>Submitted Dishes</h2>\n      <FoodListHeaders />\n      {addFoodFormFetched ? <FoodListItems /> : <FoodLoading />}\n      {addFoodFormError && <FoodError />}\n      {addFoodFormSuccess && <FoodSuccess />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './show-food-form-button.module.css';\n\nexport default function ShowFoodFormButton() {\n  const [showAddFoodForm, setShowAddFoodForm] =\n    useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormEditable] = useGlobalState('addFoodFormEditable');\n  const [, setShowAddFoodFormItemOverlay] = useGlobalState(\n    'showAddFoodFormItemOverlay',\n  );\n\n  const handleShowFormClick = () => {\n    setAddFoodFormEditable(false);\n    setShowAddFoodForm(true);\n    setShowAddFoodFormItemOverlay(-1);\n  };\n  return (\n    <button\n      className={styles.showFoodFormButton}\n      onClick={handleShowFormClick}\n      disabled={showAddFoodForm}>\n      Add a dish\n    </button>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function NavLogout() {\n  const [loggedIn, setLoggedIn] = useGlobalState('loggedIn');\n  const [currentUser, setCurrentUser] = useGlobalState('currentUser');\n  const history = useHistory();\n  const handleLogout = async () => {\n    if (!loggedIn) {\n      return; // TODO handle already logged in error\n    }\n    const req = await fetch('/api/logout', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(currentUser),\n    });\n    console.log('here');\n    if (!req.ok) {\n      return; // TODO handle logout error message\n    }\n    const resp = await req.json();\n    if (!resp) {\n      return; // TODO handle logout error message\n    }\n    const { success, message } = resp;\n    if (!success) {\n      console.log(message);\n      return; // TODO handle logout error message\n    }\n    setCurrentUser({});\n    setLoggedIn(false);\n    return history.push('/');\n  };\n  return <button onClick={handleLogout}>Logout</button>;\n}\n","import React from 'react';\nimport NavLogout from './nav-logout';\n\nexport default function Nav() {\n  return (\n    <nav>\n      <NavLogout />\n    </nav>\n  );\n}\n","import React from 'react';\n\nimport FoodForm from '../../components/add-food/form/food-form';\nimport FoodList from '../../components/add-food/list/food-list';\nimport ShowFoodFormButton from '../../components/add-food/form/show-food-form-button';\nimport { useGlobalState } from '../../state';\nimport Nav from '../../components/nav/nav';\n\nconst AddFood = () => {\n  const [showAddFoodForm] = useGlobalState('showAddFoodForm');\n  return (\n    <>\n      <Nav />\n      <FoodList />\n      {!showAddFoodForm && <ShowFoodFormButton />}\n      {showAddFoodForm && <FoodForm />}\n    </>\n  );\n};\n\nexport default AddFood;\n","import React from 'react';\nimport { useGlobalState } from '../../state';\n\nexport default function Game() {\n  const [loggedIn] = useGlobalState('loggedIn');\n  const [currentUser] = useGlobalState('currentUser');\n  return (\n    <>\n      <h2>My Celiac Adventure</h2>\n      {loggedIn && <h3>Welcome {currentUser.username}</h3>}\n    </>\n  );\n}\n","export const isAuthorized = async () => {\n  try {\n    const req = await fetch(`/api/auth`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n    if (!req.ok) {\n      return false;\n    }\n    const resp = await req.json();\n    if (!resp.success) {\n      return false;\n    }\n    return resp;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const isAdminAuthorized = async () => {\n  try {\n    const req = await fetch(`/api/auth-admin`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n    if (!req.ok) {\n      return false;\n    }\n    const resp = await req.json();\n    if (!resp.success) {\n      return false;\n    }\n    return resp;\n  } catch (err) {\n    return err;\n  }\n};\n","import React from 'react';\n\nimport { useLocation, Link } from 'react-router-dom';\n\nexport default function BaseFlipForm() {\n  const { pathname } = useLocation();\n  return (\n    <>\n      {/login/.test(pathname) ? (\n        <Link to=\"/register\">Register Instead</Link>\n      ) : (\n        <Link to=\"/login\">Login Instead</Link>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../state';\n\nimport styles from './base-input.module.css';\n\nexport default function BaseInput({\n  label,\n  name,\n  type,\n  value,\n  handleInputChange,\n  disabled,\n}) {\n  return (\n    <label className={styles.baseInputRow}>\n      <span className={`${styles.baseLabel} ${styles.above}`}>{label}</span>\n      <input\n        className={styles.baseInput}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={`${label} cannot be ${\n          type === 'number' ? 'zero' : 'blank'\n        }`}\n        onChange={handleInputChange}\n        disabled={disabled}></input>\n    </label>\n  );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function BaseSubmit() {\n  const { pathname } = useLocation();\n  const [loginFormDisabled] = useGlobalState('loginFormDisabled');\n  return (\n    <input\n      type=\"submit\"\n      value={/login/.test(pathname) ? 'Login' : 'Register'}\n      disabled={loginFormDisabled}\n    />\n  );\n}\n","import React from 'react';\nimport BaseFlipForm from './base-flip-form';\nimport BaseInput from './base-input';\nimport BaseSubmit from './base-submit';\n\nimport styles from './base-form.module.css';\n\nexport default function BaseForm({\n  formType,\n  handleFormSubmit,\n  handleInputChange,\n  formData,\n}) {\n  return (\n    <form className={styles.baseForm} onSubmit={handleFormSubmit}>\n      <BaseInput\n        label=\"Username\"\n        type=\"text\"\n        name=\"username\"\n        value={formData?.username}\n        handleInputChange={handleInputChange}\n      />\n      {formType === 'register' && (\n        <BaseInput\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={formData?.email}\n          handleInputChange={handleInputChange}\n        />\n      )}\n      <BaseInput\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={formData?.password}\n        handleInputChange={handleInputChange}\n      />\n      <section className={styles.baseButtons}>\n        <BaseSubmit />\n        <BaseFlipForm />\n      </section>\n    </form>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { useGlobalState } from '../../state';\nimport { isAdminAuthorized } from '../auth/utils';\n\nimport BaseForm from './base-form';\n\nexport default function LoginForm({ adminRequired }) {\n  const [loginFormData, setLoginFormData] = useGlobalState('loginFormData');\n  const [loginFormError, setLoginFormError] = useGlobalState('loginFormError');\n  const [loginFormSuccess, setLoginFormSuccess] =\n    useGlobalState('loginFormSuccess');\n  const [, setLoginFormDisabled] = useGlobalState('loginFormDisabled');\n  const [, setLoggedIn] = useGlobalState('loggedIn');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n  const history = useHistory();\n  const historyState = useLocation();\n  const [loaded, setLoaded] = useState(false);\n\n  const resetFormData = useCallback(() => {\n    setLoginFormData({\n      username: '',\n      password: '',\n    });\n    setLoginFormDisabled(false);\n  }, [setLoginFormData, setLoginFormDisabled]);\n\n  useEffect(() => {\n    if (loginFormSuccess) {\n      setTimeout(() => setLoginFormSuccess(''), 3000);\n    }\n    if (loginFormError) {\n      setTimeout(() => setLoginFormError(''), 5000);\n    }\n  });\n\n  useEffect(() => {\n    if (!loaded) {\n      resetFormData();\n      setLoaded(true);\n    }\n  }, [setLoaded, loaded, resetFormData]);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoginFormDisabled(true);\n    const req = await fetch('/api/login', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(loginFormData),\n    });\n\n    if (req.status === 401) {\n      resetFormData();\n      return setLoginFormError('Username or password is invalid.');\n    }\n\n    if (!req.ok) {\n      const { status, statusText } = req;\n      resetFormData();\n      return setLoginFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n\n    const resp = await req.json();\n\n    if (!resp.success) {\n      resetFormData();\n      return setLoginFormError(`Error: ${resp.error}. Please try again later.`);\n    }\n\n    if (adminRequired) {\n      const adminAuthorized = await isAdminAuthorized();\n      if (!adminAuthorized) {\n        setIsAdmin(false);\n        setLoggedIn(false);\n        resetFormData();\n        return setLoginFormError(`Error: you are not an administrator.`);\n      }\n      setIsAdmin(true);\n    }\n\n    setLoggedIn(true);\n    resetFormData();\n    setLoginFormSuccess(`Success: logged in.`);\n    return history.push(historyState?.state?.from?.pathname || '/');\n  };\n\n  const handleLoginInputChange = (e) => {\n    let value = e.target.value;\n    // make sure we are using the right value type\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    } else if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setLoginFormData({\n      ...loginFormData,\n      [e.target.name]: value,\n    });\n  };\n\n  return (\n    <>\n      {loaded && (\n        <BaseForm\n          formType=\"login\"\n          handleFormSubmit={handleLogin}\n          handleInputChange={handleLoginInputChange}\n          formData={loginFormData}\n        />\n      )}\n      {loginFormSuccess && <span>{loginFormSuccess}</span>}\n      {loginFormError && <span>{loginFormError}</span>}\n    </>\n  );\n}\n","import React from 'react';\nimport LoginForm from '../../components/user-form/login-form';\n\nexport default function Login() {\n  return (\n    <>\n      <h2>Login</h2>\n      <h3>Please login to view this page.</h3>\n      <LoginForm />\n    </>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { useGlobalState } from '../../state';\nimport { isAdminAuthorized } from '../auth/utils';\n\nimport BaseForm from './base-form';\n\nexport default function RegisterForm({ adminRequired }) {\n  const [registerFormData, setRegisterFormData] =\n    useGlobalState('registerFormData');\n  const [registerFormError, setRegisterFormError] =\n    useGlobalState('registerFormError');\n  const [registerFormSuccess, setRegisterFormSuccess] = useGlobalState(\n    'registerFormSuccess',\n  );\n  const [, setRegisterFormDisabled] = useGlobalState('registerFormDisabled');\n  const [, setLoggedIn] = useGlobalState('loggedIn');\n  const history = useHistory();\n  const historyState = useLocation();\n  const [loaded, setLoaded] = useState(false);\n\n  const resetFormData = useCallback(() => {\n    setRegisterFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n    setRegisterFormDisabled(false);\n  }, [setRegisterFormData, setRegisterFormDisabled]);\n\n  useEffect(() => {\n    if (registerFormSuccess) {\n      setTimeout(() => setRegisterFormSuccess(''), 3000);\n    }\n    if (registerFormError) {\n      setTimeout(() => setRegisterFormError(''), 5000);\n    }\n  });\n\n  useEffect(() => {\n    if (!loaded) {\n      resetFormData();\n      setLoaded(true);\n    }\n  }, [setLoaded, loaded, resetFormData]);\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setRegisterFormDisabled(true);\n    const req = await fetch('/api/register', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(registerFormData),\n    });\n\n    if (!req.status === 201) {\n      console.log(req);\n      const { status, message } = req;\n      resetFormData();\n      return setRegisterFormError(`${status} error: ${message}.`);\n    }\n\n    const resp = await req.json();\n\n    if (!resp.success) {\n      resetFormData();\n      return setRegisterFormError(\n        `Error: ${resp.error}. Please try again later.`,\n      );\n    }\n\n    setLoggedIn(true);\n    resetFormData();\n    setRegisterFormSuccess(`Success: logged in.`);\n    return history.push(historyState?.state?.from?.pathname || '/');\n  };\n\n  const handleRegisterInputChange = (e) => {\n    let value = e.target.value;\n    // make sure we are using the right value type\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    } else if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setRegisterFormData({\n      ...registerFormData,\n      [e.target.name]: value,\n    });\n  };\n\n  return (\n    <>\n      {loaded && (\n        <BaseForm\n          formType=\"register\"\n          handleFormSubmit={handleRegister}\n          handleInputChange={handleRegisterInputChange}\n          formData={registerFormData}\n        />\n      )}\n      {registerFormSuccess && <span>{registerFormSuccess}</span>}\n      {registerFormError && <span>{registerFormError}</span>}\n    </>\n  );\n}\n","import React from 'react';\nimport RegisterForm from '../../components/user-form/register-form';\n\nexport default function Register() {\n  return (\n    <>\n      <h2>Register</h2>\n      <h3>Create a new account to get started.</h3>\n      <RegisterForm />\n    </>\n  );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function AdminAuthorized({ location, ...props }) {\n  const [loggedIn] = useGlobalState('loggedIn');\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  return (\n    <>\n      {loggedIn && isAdmin ? (\n        <Route {...props} />\n      ) : (\n        <Redirect\n          to={{ pathname: '/admin-login', state: { from: location } }}\n        />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport LoginForm from '../../components/user-form/login-form';\n\nexport default function AdminLogin() {\n  return (\n    <>\n      <h2>Admin Login</h2>\n      <h3>You must be an administrator to view this page.</h3>\n      <LoginForm adminRequired={true} />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport AddFood from '../add-food/add-food';\nimport Game from '../game/game';\nimport Login from '../login/login';\nimport Register from '../register/register';\nimport { useGlobalState } from '../../state';\nimport {\n  isAuthorized,\n  isAdminAuthorized,\n} from '../../components/auth/utils/index';\n\nimport styles from './app.module.css';\nimport AdminAuthorized from '../../components/auth/auth-admin';\nimport AdminLogin from '../login/admin-login';\n\nexport default function App() {\n  const [loggedIn, setLoggedIn] = useGlobalState('loggedIn');\n  const [isAdmin, setIsAdmin] = useGlobalState('isAdmin');\n  const [, setCurrentUser] = useGlobalState('currentUser');\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const getLoginStatus = async () => {\n      const authStatus = await isAuthorized();\n      if (authStatus.success) {\n        setLoggedIn(true);\n        setCurrentUser(authStatus.data);\n      }\n      const adminStatus = await isAdminAuthorized();\n      if (adminStatus.success) {\n        setIsAdmin(true);\n      }\n      setLoaded(true);\n    };\n\n    getLoginStatus();\n  }, [loggedIn, setLoggedIn, setCurrentUser, setIsAdmin]);\n\n  return (\n    <div className={styles.app}>\n      {loaded && (\n        <>\n          <Router>\n            <Switch>\n              <AdminAuthorized path=\"/add-food\" component={AddFood} />\n              <Route path=\"/admin-login\" component={AdminLogin} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/\" component={Game} />\n            </Switch>\n          </Router>\n        </>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}