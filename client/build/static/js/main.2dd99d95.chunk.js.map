{"version":3,"sources":["components/add-food/list/food-list.module.css","components/add-food/form/food-input.module.css","components/add-food/form/food-form.module.css","components/add-food/list/food-error.module.css","components/add-food/list/food-success.module.css","components/add-food/list/food-item-overlay.module.css","components/add-food/form/show-food-form-button.module.css","pages/add-food/add-food.module.css","state.js","components/add-food/form/food-submit.js","components/add-food/form/food-cancel.js","components/add-food/form/food-input.js","components/add-food/constants.js","components/add-food/form/food-form.js","components/add-food/list/food-error.js","components/add-food/list/food-success.js","components/add-food/list/food-list-headers.js","components/add-food/list/food-item-overlay.js","components/add-food/list/food-list-item.js","components/add-food/list/food-list-items.js","components/add-food/list/food-loading.js","components/add-food/list/food-list.js","components/add-food/form/show-food-form-button.js","pages/add-food/add-food.js","pages/game/game.js","pages/app/app.js","reportWebVitals.js","index.js"],"names":["module","exports","useGlobalState","createGlobalState","showForm","fetched","formDisabled","formEditable","showFormItemOverlay","error","success","foods","food","formData","FoodSubmit","type","value","disabled","FoodCancel","setFood","setShowForm","setFormDisabled","onClick","FoodInput","name","label","handleInputChange","className","styles","foodRow","short","foodLabel","above","foodInput","checked","onChange","placeholder","foodLabels","gluten","glutenExplanation","fructose","fructoseExplanation","lactose","lactoseExplanation","price","baseHunger","baseHealth","breakfast","lunch","dinner","tags","baseFormData","FoodForm","setFetched","setError","setSuccess","setFormData","resetFormData","useCallback","useEffect","validateForm","activeInputs","foodInputs","filter","input","i","length","props","handleFormSubmit","e","a","preventDefault","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","req","json","resp","data","target","parseInt","Object","entries","key","test","map","foodFormModalOverlay","foodFormModal","foodFormContainer","foodForm","onSubmit","foodButtons","FormError","foodError","FoodSuccess","foodSuccess","FoodListHeaders","foodListHeaders","values","header","foodListFields","foodListItem","FoodItemOverlay","_id","setFormEditable","handleClickEdit","ok","status","statusText","filtered","mapped","assign","handleClickDelete","foodItemOverlay","FoodListItem","index","showFoodItemOverlay","setShowFoodItemOverlay","foodFields","formatted","slice","FoodListItems","foodListItems","FoodLoading","FoodList","setFoods","fetchFoods","setTimeout","foodList","ShowFoodFormButton","showFoodFormButton","AddFood","addFoodContainer","Game","game","App","app","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dd99d95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodList\":\"food-list_foodList__1reRd\",\"foodListItems\":\"food-list_foodListItems__Vom0L\",\"foodListItem\":\"food-list_foodListItem__2AAim\",\"foodListFields\":\"food-list_foodListFields__1drop\",\"headers\":\"food-list_headers__1zgGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodRow\":\"food-input_foodRow__3FaJC\",\"foodLabel\":\"food-input_foodLabel__36i1a\",\"short\":\"food-input_short__DWUPW\",\"above\":\"food-input_above__3tFye\",\"foodInput\":\"food-input_foodInput__3PEmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodFormModal\":\"food-form_foodFormModal__1i0xW\",\"foodFormModalOverlay\":\"food-form_foodFormModalOverlay__1g29t\",\"foodFormContainer\":\"food-form_foodFormContainer__3VGNq\",\"foodForm\":\"food-form_foodForm__2gEtH\",\"foodButtons\":\"food-form_foodButtons__2Aahn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodError\":\"food-error_foodError__2Xmmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodSuccess\":\"food-success_foodSuccess__3NQQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodItemOverlay\":\"food-item-overlay_foodItemOverlay__20Ma9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showFoodFormButton\":\"show-food-form-button_showFoodFormButton__1oBC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFoodContainer\":\"add-food_addFoodContainer__uymAp\"};","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  showForm: false,\n  fetched: false,\n  formDisabled: false,\n  formEditable: false,\n  showFormItemOverlay: -1,\n  error: '',\n  success: '',\n  foods: [],\n  food: '',\n  formData: {},\n};\n\nexport const { useGlobalState } = createGlobalState(initialState);\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodSubmit() {\n  const [formDisabled] = useGlobalState('formDisabled');\n  return <input type=\"submit\" value=\"Submit\" disabled={formDisabled} />;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodCancel() {\n  const [, setFood] = useGlobalState('food');\n  const [, setShowForm] = useGlobalState('showForm');\n  const [, setFormDisabled] = useGlobalState('formDisabled');\n\n  const handleClick = () => {\n    setFood('');\n    setShowForm(false);\n    setFormDisabled(true);\n  };\n\n  return <button onClick={handleClick}>Cancel</button>;\n}\n","import React from 'react';\n\nimport styles from './food-input.module.css';\n\nexport default function FoodInput({\n  name,\n  label,\n  type,\n  value,\n  handleInputChange,\n}) {\n  return (\n    <>\n      <label\n        className={`${styles.foodRow} ${type === 'checkbox' && styles.short}`}>\n        <span\n          className={`${styles.foodLabel} ${\n            (type === 'text' || type === 'number') && styles.above\n          }`}>\n          {label}\n        </span>\n        <input\n          className={`${styles.foodInput}`}\n          name={name}\n          type={type}\n          value={value}\n          checked={value}\n          onChange={handleInputChange}\n          placeholder={`${label} cannot be ${\n            type === 'number' ? 'zero' : 'blank'\n          }`}\n        />\n      </label>\n    </>\n  );\n}\n","export const foodLabels = {\n  name: 'Name',\n  gluten: 'Gluten',\n  glutenExplanation: 'Gluten Explanation',\n  fructose: 'Fructose',\n  fructoseExplanation: 'Fructose Explanation',\n  lactose: 'Lactose',\n  lactoseExplanation: 'Lactose Explanation',\n  price: 'Price',\n  baseHunger: 'Base Hunger',\n  baseHealth: 'Base Health',\n  breakfast: 'Breakfast',\n  lunch: 'Lunch',\n  dinner: 'Dinner',\n  tags: 'Tags',\n};\n\nexport const baseFormData = {\n  name: '',\n  gluten: 1,\n  glutenExplanation: '',\n  fructose: false,\n  fructoseExplanation: '',\n  lactose: false,\n  lactoseExplanation: '',\n  price: 1,\n  baseHunger: 1,\n  baseHealth: 1,\n  breakfast: false,\n  lunch: false,\n  dinner: false,\n  tags: [],\n};\n","import React, { useCallback, useEffect } from 'react';\n\nimport FoodSubmit from './food-submit';\nimport FoodCancel from './food-cancel';\nimport FoodInput from './food-input';\nimport { foodLabels, baseFormData } from '../constants';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-form.module.css';\n\nexport default function FoodForm() {\n  const [, setFetched] = useGlobalState('fetched');\n  const [, setFormDisabled] = useGlobalState('formDisabled');\n  const [, setShowForm] = useGlobalState('showForm');\n  const [, setFood] = useGlobalState('food');\n  const [, setError] = useGlobalState('error');\n  const [, setSuccess] = useGlobalState('success');\n  const [food] = useGlobalState('food');\n  const [formEditable] = useGlobalState('formEditable');\n  const [formData, setFormData] = useGlobalState('formData');\n\n  const resetFormData = useCallback(() => {\n    setFormData(baseFormData);\n  }, [setFormData]);\n\n  useEffect(() => {\n    if (!formEditable) {\n      resetFormData();\n    }\n  }, [resetFormData, formEditable]);\n\n  useEffect(() => {\n    validateForm();\n  });\n\n  const validateForm = () => {\n    // filter out unused inputs\n    const activeInputs = foodInputs.filter((input) => input !== null);\n    for (let i = 0; i < activeInputs.length; i += 1) {\n      const { type, value } = activeInputs[i].props;\n      // ignore checkboxes and check for blanks\n      if (type !== 'checkbox' && !value) {\n        return setFormDisabled(true);\n      }\n    }\n    return setFormDisabled(false);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    setFormDisabled(true);\n    let req;\n    if (!formEditable) {\n      req = await fetch('/api/food/one', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n    } else {\n      req = await fetch(`/api/food/one/${food}`, {\n        method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n    }\n    const resp = await req.json();\n    if (resp.success) {\n      resetFormData();\n      setFetched(false);\n      setShowForm(false);\n      setFood('');\n      return setSuccess(`Success: ${resp.data.name} was edited.`);\n    } else {\n      setFormDisabled(false);\n      return setError(`Error: ${resp.error}. Please try again later.`);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    let value = e.target.value;\n    // make sure we are using the right value type\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    } else if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setFormData({\n      ...formData,\n      [e.target.name]: value,\n    });\n  };\n\n  const foodInputs = Object.entries(formData)\n    // filter out mongoDB _ keys\n    ?.filter(([key]) => !/_/.test(key))\n    ?.map(([key, value]) => {\n      // render inputs based on formData data structure\n      let type = 'text';\n      // assign different input type based on input value type\n      if (typeof value === 'boolean') {\n        type = 'checkbox';\n      } else if (typeof value === 'number') {\n        type = 'number';\n      }\n      // hide explanation inputs if not applicable\n      if (key === 'glutenExplanation' && !formData['gluten']) {\n        return null;\n      }\n      if (key === 'fructoseExplanation' && !formData['fructose']) {\n        return null;\n      }\n      if (key === 'lactoseExplanation' && !formData['lactose']) {\n        return null;\n      }\n      return (\n        <FoodInput\n          key={key}\n          name={key}\n          label={foodLabels[key]}\n          type={type}\n          value={formData[key]}\n          handleInputChange={handleInputChange}\n        />\n      );\n    });\n\n  return (\n    <>\n      <div className={styles.foodFormModalOverlay} />\n      <article className={styles.foodFormModal}>\n        <div className={styles.foodFormContainer}>\n          <h2>{formEditable ? 'Edit a dish' : 'Add a dish'}</h2>\n          <form className={styles.foodForm} onSubmit={handleFormSubmit}>\n            {foodInputs}\n            <section className={styles.foodButtons}>\n              <FoodSubmit />\n              <FoodCancel />\n            </section>\n          </form>\n        </div>\n      </article>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-error.module.css';\n\nexport default function FormError() {\n  const [error] = useGlobalState('error');\n  return <span className={styles.foodError}>{error}</span>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-success.module.css';\n\nexport default function FoodSuccess() {\n  const [success] = useGlobalState('success');\n  return <span className={styles.foodSuccess}>{success}</span>;\n}\n","import React from 'react';\n\nimport { foodLabels } from '../constants';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListHeaders() {\n  const foodListHeaders = Object.values(foodLabels)\n    ?.filter((label) => !/Explanation/.test(label))\n    ?.map((header, i) => (\n      <span\n        className={`${styles.foodListFields} ${styles.headers}`}\n        key={`Header_${i}`}>\n        {header}\n      </span>\n    ));\n  return <section className={styles.foodListItem}>{foodListHeaders}</section>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\nimport { baseFormData } from '../constants';\n\nimport styles from './food-item-overlay.module.css';\n\nexport default function FoodItemOverlay({ _id }) {\n  const [, setError] = useGlobalState('error');\n  const [, setFormData] = useGlobalState('formData');\n  const [, setFormEditable] = useGlobalState('formEditable');\n  const [, setShowForm] = useGlobalState('showForm');\n  const [, setFetched] = useGlobalState('fetched');\n  const [, setSuccess] = useGlobalState('success');\n  const [, setFood] = useGlobalState('food');\n\n  const handleClickEdit = async () => {\n    const req = await fetch(`/api/food/one/${_id}`);\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      // filter out mongoDB _ keys\n      const filtered = Object.entries(data)?.filter(([key]) => !/_/.test(key));\n      // map fetched data to form data shape\n      const mapped = Object.assign({}, baseFormData);\n      for (let i = 0; i < filtered.length; i += 1) {\n        const [key, value] = filtered[i];\n        mapped[key] = value;\n      }\n      setFood(_id);\n      setFormData(mapped);\n      setFormEditable(true);\n      setShowForm(true);\n    } else {\n      setError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  const handleClickDelete = async () => {\n    const req = await fetch(`/api/food/one/${_id}`, {\n      method: 'DELETE',\n    });\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setFetched(false);\n      setSuccess(`Success: ${data.name} was deleted.`);\n    } else {\n      setError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  return (\n    <section className={styles.foodItemOverlay}>\n      <button onClick={handleClickEdit}>Edit</button>\n      <button onClick={handleClickDelete}>Delete</button>\n    </section>\n  );\n}\n","import React from 'react';\n\nimport FoodItemOverlay from './food-item-overlay';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItem({ food, index }) {\n  const { _id } = food;\n\n  const [showFoodItemOverlay, setShowFoodItemOverlay] = useGlobalState(\n    'showFormItemOverlay',\n  );\n\n  const handleShowFoodItemOverlay = () => {\n    if (showFoodItemOverlay === index) {\n      return setShowFoodItemOverlay(-1);\n    }\n    return setShowFoodItemOverlay(index);\n  };\n\n  // filter out unused fields (explanation fields and mongoDB fields)\n  const foodFields = Object.entries(food)\n    ?.filter(([key]) => !/Explanation|_/.test(key))\n    ?.map(([key, value], i) => {\n      let formatted = value;\n      if (typeof value === 'string' && value.length > 32) {\n        formatted = value.slice(0, 29) + `...`;\n      }\n      return (\n        <span key={`Value_${i}`} className={styles.foodListFields}>\n          {typeof value === 'string' ? formatted : JSON.stringify(value)}\n        </span>\n      );\n    });\n\n  return (\n    <article\n      onClick={handleShowFoodItemOverlay}\n      className={styles.foodListItem}>\n      {foodFields}\n      {showFoodItemOverlay === index && <FoodItemOverlay _id={_id} />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport FoodListItem from './food-list-item';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItems() {\n  const [foods] = useGlobalState('foods');\n  const foodListItems = foods?.map((food, i) => {\n    return <FoodListItem key={`Item_${i}`} food={food} index={i} />;\n  });\n  return <section className={styles.foodListItems}>{foodListItems}</section>;\n}\n","import React from 'react';\n\nexport default function FoodLoading() {\n  return <span>Please wait, loading...</span>;\n}\n","import React, { useEffect } from 'react';\n\nimport FoodError from './food-error';\nimport FoodSuccess from './food-success';\nimport FoodListHeaders from './food-list-headers';\nimport FoodListItems from './food-list-items';\nimport FoodLoading from './food-loading';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodList() {\n  const [, setFoods] = useGlobalState('foods');\n  const [fetched, setFetched] = useGlobalState('fetched');\n  const [error, setError] = useGlobalState('error');\n  const [success, setSuccess] = useGlobalState('success');\n\n  const fetchFoods = async () => {\n    const req = await fetch('/api/food/all');\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setFoods(data);\n      setFetched(true);\n    } else {\n      setError(`Error: ${data}. Please try again later.`);\n      setFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!fetched) {\n      fetchFoods();\n    }\n  });\n\n  useEffect(() => {\n    if (success) {\n      setTimeout(() => setSuccess(''), 3000);\n    }\n    if (error) {\n      setTimeout(() => setError(''), 5000);\n    }\n  });\n\n  return (\n    <article className={styles.foodList}>\n      <h2>Submitted Dishes</h2>\n      <FoodListHeaders />\n      {fetched ? <FoodListItems /> : <FoodLoading />}\n      {error && <FoodError />}\n      {success && <FoodSuccess />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './show-food-form-button.module.css';\n\nexport default function ShowFoodFormButton() {\n  const [showForm, setShowForm] = useGlobalState('showForm');\n  const [, setFormEditable] = useGlobalState('formEditable');\n  const [, setShowFoodItemOverlay] = useGlobalState('showFormItemOverlay');\n\n  const handleShowFormClick = () => {\n    setFormEditable(false);\n    setShowForm(true);\n    setShowFoodItemOverlay(-1);\n  };\n  return (\n    <button\n      className={styles.showFoodFormButton}\n      onClick={handleShowFormClick}\n      disabled={showForm}>\n      Add a dish\n    </button>\n  );\n}\n","import React from 'react';\n\nimport FoodForm from '../../components/add-food/form/food-form';\nimport FoodList from '../../components/add-food/list/food-list';\nimport ShowFoodFormButton from '../../components/add-food/form/show-food-form-button';\nimport { useGlobalState } from '../../state';\n\nimport styles from './add-food.module.css';\n\nconst AddFood = () => {\n  const [showForm] = useGlobalState('showForm');\n  return (\n    <article className={styles.addFoodContainer}>\n      <FoodList />\n      {!showForm && <ShowFoodFormButton />}\n      {showForm && <FoodForm />}\n    </article>\n  );\n};\n\nexport default AddFood;\n","import React from 'react';\n\nimport styles from './game.module.css';\n\nexport default function Game() {\n  return (\n    <article className={styles.game}>\n      <h2>My Celiac Adventure</h2>\n    </article>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport AddFood from '../add-food/add-food';\nimport Game from '../game/game';\n\nimport styles from './app.module.css';\n\nexport default function App() {\n  return (\n    <div className={styles.app}>\n      <Router>\n        <Switch>\n          <Route path=\"/add-food\" component={AddFood} />\n          <Route path=\"/\" component={Game} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}