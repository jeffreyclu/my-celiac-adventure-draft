{"version":3,"sources":["components/add-food/list/food-list.module.css","components/add-food/form/food-input.module.css","components/add-food/form/food-form.module.css","components/add-food/form/food-tag.module.css","components/add-food/form/food-tags.module.css","components/add-food/list/food-error.module.css","components/add-food/list/food-success.module.css","components/add-food/list/food-item-overlay.module.css","components/add-food/form/show-food-form-button.module.css","pages/add-food/add-food.module.css","state.js","components/add-food/form/food-submit.js","components/add-food/form/food-cancel.js","components/add-food/form/food-input.js","components/add-food/form/food-tag.js","components/add-food/form/food-tags.js","components/add-food/constants.js","components/add-food/form/food-form.js","components/add-food/list/food-error.js","components/add-food/list/food-success.js","components/add-food/list/food-list-headers.js","components/add-food/list/food-item-overlay.js","components/add-food/list/food-list-item.js","components/add-food/list/food-list-items.js","components/add-food/list/food-loading.js","components/add-food/list/food-list.js","components/add-food/form/show-food-form-button.js","pages/add-food/add-food.js","pages/game/game.js","pages/app/App.js","reportWebVitals.js","index.js"],"names":["module","exports","useGlobalState","createGlobalState","showForm","fetched","formDisabled","formEditable","showFormItemOverlay","error","success","foods","food","formData","FoodSubmit","type","value","disabled","FoodCancel","setFood","setShowForm","setFormDisabled","onClick","FoodInput","name","label","handleInputChange","className","styles","foodRow","short","foodLabel","above","foodInput","checked","onChange","placeholder","FoodTag","tag","useState","used","setUsed","setFormData","useEffect","i","length","foodTag","newTags","filter","oldTag","push","tags","FoodTags","fetchedTags","setFetchedTags","formTags","setFormTags","setError","fetchTags","a","localStorage","getItem","cachedTags","JSON","parse","fetch","req","ok","status","statusText","json","resp","data","setItem","stringify","tagsList","map","foodTags","foodLabels","gluten","glutenExplanation","fructose","fructoseExplanation","lactose","lactoseExplanation","price","baseHunger","baseHealth","breakfast","lunch","dinner","baseFormData","FoodForm","setFetched","setSuccess","resetFormData","useCallback","activeInputs","foodInputs","input","props","validateForm","handleFormSubmit","e","preventDefault","method","mode","cache","credentials","headers","body","target","parseInt","Object","entries","key","test","foodFormModalOverlay","foodFormModal","foodFormContainer","foodForm","onSubmit","foodButtons","FormError","foodError","FoodSuccess","foodSuccess","FoodListHeaders","foodListHeaders","values","header","foodListFields","foodListItem","FoodItemOverlay","_id","setFormEditable","handleClickEdit","filtered","mapped","assign","handleClickDelete","foodItemOverlay","FoodListItem","index","showFoodItemOverlay","setShowFoodItemOverlay","foodFields","formatted","slice","green","FoodListItems","foodListItems","FoodLoading","FoodList","setFoods","fetchFoods","setTimeout","foodList","ShowFoodFormButton","showFoodFormButton","AddFood","addFoodContainer","Game","game","App","app","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.649fdc26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodList\":\"food-list_foodList__1reRd\",\"foodListItems\":\"food-list_foodListItems__Vom0L\",\"foodListItem\":\"food-list_foodListItem__2AAim\",\"foodListFields\":\"food-list_foodListFields__1drop\",\"headers\":\"food-list_headers__1zgGb\",\"green\":\"food-list_green__3Ei-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodRow\":\"food-input_foodRow__3FaJC\",\"foodLabel\":\"food-input_foodLabel__36i1a\",\"short\":\"food-input_short__DWUPW\",\"above\":\"food-input_above__3tFye\",\"foodInput\":\"food-input_foodInput__3PEmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodFormModal\":\"food-form_foodFormModal__1i0xW\",\"foodFormModalOverlay\":\"food-form_foodFormModalOverlay__1g29t\",\"foodFormContainer\":\"food-form_foodFormContainer__3VGNq\",\"foodForm\":\"food-form_foodForm__2gEtH\",\"foodButtons\":\"food-form_foodButtons__2Aahn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodTag\":\"food-tag_foodTag__2pFO_\",\"used\":\"food-tag_used__1-LlO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodTags\":\"food-tags_foodTags__38xGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodError\":\"food-error_foodError__2Xmmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodSuccess\":\"food-success_foodSuccess__3NQQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodItemOverlay\":\"food-item-overlay_foodItemOverlay__20Ma9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showFoodFormButton\":\"show-food-form-button_showFoodFormButton__1oBC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFoodContainer\":\"add-food_addFoodContainer__uymAp\"};","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  showForm: false,\n  fetched: false,\n  formDisabled: false,\n  formEditable: false,\n  showFormItemOverlay: -1,\n  error: '',\n  success: '',\n  foods: [],\n  food: '',\n  formData: {},\n};\n\nexport const { useGlobalState } = createGlobalState(initialState);\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodSubmit() {\n  const [formDisabled] = useGlobalState('formDisabled');\n  return <input type=\"submit\" value=\"Submit\" disabled={formDisabled} />;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodCancel() {\n  const [, setFood] = useGlobalState('food');\n  const [, setShowForm] = useGlobalState('showForm');\n  const [, setFormDisabled] = useGlobalState('formDisabled');\n\n  const handleClick = () => {\n    setFood('');\n    setShowForm(false);\n    setFormDisabled(true);\n  };\n\n  return <button onClick={handleClick}>Cancel</button>;\n}\n","import React from 'react';\n\nimport styles from './food-input.module.css';\n\nexport default function FoodInput({\n  name,\n  label,\n  type,\n  value,\n  handleInputChange,\n  disabled,\n}) {\n  return (\n    <>\n      <label\n        className={`${styles.foodRow} ${type === 'checkbox' && styles.short}`}>\n        <span\n          className={`${styles.foodLabel} ${\n            (type === 'text' || type === 'number') && styles.above\n          }`}>\n          {label}\n        </span>\n        <input\n          className={`${styles.foodInput}`}\n          name={name}\n          type={type}\n          value={value}\n          checked={value}\n          onChange={handleInputChange}\n          placeholder={`${label} cannot be ${\n            type === 'number' ? 'zero' : 'blank'\n          }`}\n          disabled={disabled}\n        />\n      </label>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-tag.module.css';\n\nexport default function FoodTag({ tag }) {\n  const [used, setUsed] = useState(false);\n  const [formData, setFormData] = useGlobalState('formData');\n  const [formEditable] = useGlobalState('formEditable');\n\n  // check if current tag is already in the formdata, then set it to used\n  // this is only checked when editing existing an existing dish\n  useEffect(() => {\n    if (formEditable) {\n      for (let i = 0; i < formData['tags'].length; i += 1) {\n        if (formData['tags'][i] === tag) {\n          setUsed(true);\n        }\n      }\n    }\n  }, [formData, formEditable, tag, setUsed]);\n\n  const handleClick = () => {\n    // copy the existing tags used in the form\n    let newTags = [...formData['tags']];\n    if (used) {\n      // if the current tag is used, remove it from the form's tags\n      newTags = newTags.filter((oldTag) => oldTag !== tag);\n      setUsed(false);\n    } else {\n      // otherwise, add it to the form's tags\n      newTags.push(tag);\n      setUsed(true);\n    }\n\n    // update the form data with new tags array\n    setFormData({\n      ...formData,\n      tags: newTags,\n    });\n  };\n\n  return (\n    <span\n      className={`${styles.foodTag} ${used && styles.used}`}\n      onClick={handleClick}>\n      {tag}\n    </span>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport FoodTag from './food-tag';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-tags.module.css';\n\nexport default function FoodTags() {\n  const [fetchedTags, setFetchedTags] = useState(false);\n  const [formTags, setFormTags] = useState([]);\n  const [setError] = useGlobalState('error');\n\n  const fetchTags = async () => {\n    // check cache\n    if (localStorage.getItem('tags')) {\n      const cachedTags = JSON.parse(localStorage.getItem('tags'));\n      setFormTags(cachedTags);\n      return setFetchedTags(true);\n    }\n\n    // otherwise make fresh data request\n    const req = await fetch('/api/tag/all');\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n\n    if (success) {\n      // first cache the data\n      localStorage.setItem('tags', JSON.stringify(data));\n      setFormTags(data);\n      setFetchedTags(true);\n    } else {\n      setError(`Error: ${data}. Please try again later.`);\n      setFetchedTags(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!fetchedTags) {\n      fetchTags();\n    }\n  });\n\n  const tagsList = formTags?.map(({ tag }, i) => {\n    return <FoodTag key={`Tag_${i}`} tag={tag} />;\n  });\n\n  return (\n    <>\n      <section className={styles.foodTags}>{tagsList}</section>\n    </>\n  );\n}\n","export const foodLabels = {\n  name: 'Name',\n  gluten: 'Gluten',\n  glutenExplanation: 'Gluten Explanation',\n  fructose: 'Fructose',\n  fructoseExplanation: 'Fructose Explanation',\n  lactose: 'Lactose',\n  lactoseExplanation: 'Lactose Explanation',\n  price: 'Price',\n  baseHunger: 'Base Hunger',\n  baseHealth: 'Base Health',\n  breakfast: 'Breakfast',\n  lunch: 'Lunch',\n  dinner: 'Dinner',\n  tags: 'Tags',\n};\n\nexport const baseFormData = {\n  name: '',\n  gluten: 1,\n  glutenExplanation: '',\n  fructose: false,\n  fructoseExplanation: '',\n  lactose: false,\n  lactoseExplanation: '',\n  price: 1,\n  baseHunger: 1,\n  baseHealth: 1,\n  breakfast: false,\n  lunch: false,\n  dinner: false,\n  tags: [],\n};\n","import React, { useCallback, useEffect } from 'react';\n\nimport FoodSubmit from './food-submit';\nimport FoodCancel from './food-cancel';\nimport FoodInput from './food-input';\nimport FoodTags from './food-tags';\nimport { foodLabels, baseFormData } from '../constants';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-form.module.css';\n\nexport default function FoodForm() {\n  const [, setFetched] = useGlobalState('fetched');\n  const [, setFormDisabled] = useGlobalState('formDisabled');\n  const [, setShowForm] = useGlobalState('showForm');\n  const [, setFood] = useGlobalState('food');\n  const [, setError] = useGlobalState('error');\n  const [, setSuccess] = useGlobalState('success');\n  const [food] = useGlobalState('food');\n  const [formEditable] = useGlobalState('formEditable');\n  const [formData, setFormData] = useGlobalState('formData');\n\n  const resetFormData = useCallback(() => {\n    setFormData(baseFormData);\n  }, [setFormData]);\n\n  // generate a blank form if not editing an existing food\n  useEffect(() => {\n    if (!formEditable) {\n      resetFormData();\n    }\n  }, [resetFormData, formEditable]);\n\n  const validateForm = () => {\n    // filter out unused inputs\n    const activeInputs = foodInputs.filter((input) => input !== null);\n    for (let i = 0; i < activeInputs.length; i += 1) {\n      const { type, value } = activeInputs[i].props;\n      // ignore checkboxes and check for blanks\n      if (type !== 'checkbox' && !value) {\n        return setFormDisabled(true);\n      }\n    }\n    return setFormDisabled(false);\n  };\n\n  // validate form on every change\n  useEffect(() => {\n    validateForm();\n  });\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    setFormDisabled(true);\n    let req;\n    if (!formEditable) {\n      // if not editing existing data, send new POST request\n      req = await fetch('/api/food/one', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n    } else {\n      // otherwise, send PUT request\n      req = await fetch(`/api/food/one/${food}`, {\n        method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n    }\n\n    const resp = await req.json();\n\n    if (resp.success) {\n      resetFormData();\n      setFetched(false);\n      setShowForm(false);\n      setFood('');\n      return setSuccess(`Success: ${resp.data.name} was edited.`);\n    } else {\n      setFormDisabled(false);\n      return setError(`Error: ${resp.error}. Please try again later.`);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    let value = e.target.value;\n    // make sure we are using the right value type\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    } else if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setFormData({\n      ...formData,\n      [e.target.name]: value,\n    });\n  };\n\n  const foodInputs = Object.entries(formData)\n    // filter out mongoDB _ keys\n    ?.filter(([key]) => !/_/.test(key))\n    ?.map(([key, value]) => {\n      // render inputs dynamically based on form data structure\n      let type = 'text';\n      // assign different input type based on input value type\n      if (typeof value === 'boolean') {\n        type = 'checkbox';\n      } else if (typeof value === 'number') {\n        type = 'number';\n      }\n      // hide explanation inputs if not applicable\n      if (key === 'glutenExplanation' && !formData['gluten']) {\n        return null;\n      }\n      if (key === 'fructoseExplanation' && !formData['fructose']) {\n        return null;\n      }\n      if (key === 'lactoseExplanation' && !formData['lactose']) {\n        return null;\n      }\n      return (\n        <FoodInput\n          key={key}\n          name={key}\n          label={foodLabels[key]}\n          type={type}\n          value={formData[key]}\n          handleInputChange={handleInputChange}\n          disabled={key === 'tags'}\n        />\n      );\n    });\n\n  return (\n    <>\n      <div className={styles.foodFormModalOverlay} />\n      <article className={styles.foodFormModal}>\n        <div className={styles.foodFormContainer}>\n          <h2>{formEditable ? 'Edit a dish' : 'Add a dish'}</h2>\n          <form className={styles.foodForm} onSubmit={handleFormSubmit}>\n            {foodInputs}\n            <FoodTags />\n            <section className={styles.foodButtons}>\n              <FoodSubmit />\n              <FoodCancel />\n            </section>\n          </form>\n        </div>\n      </article>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-error.module.css';\n\nexport default function FormError() {\n  const [error] = useGlobalState('error');\n  return <span className={styles.foodError}>{error}</span>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-success.module.css';\n\nexport default function FoodSuccess() {\n  const [success] = useGlobalState('success');\n  return <span className={styles.foodSuccess}>{success}</span>;\n}\n","import React from 'react';\n\nimport { foodLabels } from '../constants';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListHeaders() {\n  const foodListHeaders = Object.values(foodLabels)\n    // filter out the explanation fields, no need to show them\n    ?.filter((label) => !/Explanation/.test(label))\n    ?.map((header, i) => (\n      <span\n        className={`${styles.foodListFields} ${styles.headers}`}\n        key={`Header_${i}`}>\n        {header}\n      </span>\n    ));\n  return <section className={styles.foodListItem}>{foodListHeaders}</section>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\nimport { baseFormData } from '../constants';\n\nimport styles from './food-item-overlay.module.css';\n\nexport default function FoodItemOverlay({ _id }) {\n  const [, setError] = useGlobalState('error');\n  const [, setFormData] = useGlobalState('formData');\n  const [, setFormEditable] = useGlobalState('formEditable');\n  const [, setShowForm] = useGlobalState('showForm');\n  const [, setFetched] = useGlobalState('fetched');\n  const [, setSuccess] = useGlobalState('success');\n  const [, setFood] = useGlobalState('food');\n\n  const handleClickEdit = async () => {\n    const req = await fetch(`/api/food/one/${_id}`);\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      // filter out mongoDB _ keys\n      const filtered = Object.entries(data)?.filter(([key]) => !/_/.test(key));\n      // map fetched data to form data shape\n      const mapped = Object.assign({}, baseFormData);\n      for (let i = 0; i < filtered.length; i += 1) {\n        const [key, value] = filtered[i];\n        mapped[key] = value;\n      }\n      setFood(_id);\n      setFormData(mapped);\n      setFormEditable(true);\n      setShowForm(true);\n    } else {\n      setError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  const handleClickDelete = async () => {\n    const req = await fetch(`/api/food/one/${_id}`, {\n      method: 'DELETE',\n    });\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setFetched(false);\n      setSuccess(`Success: ${data.name} was deleted.`);\n    } else {\n      setError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  return (\n    <section className={styles.foodItemOverlay}>\n      <button onClick={handleClickEdit}>Edit</button>\n      <button onClick={handleClickDelete}>Delete</button>\n    </section>\n  );\n}\n","import React from 'react';\n\nimport FoodItemOverlay from './food-item-overlay';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItem({ food, index }) {\n  const { _id } = food;\n\n  const [showFoodItemOverlay, setShowFoodItemOverlay] = useGlobalState(\n    'showFormItemOverlay',\n  );\n\n  const handleShowFoodItemOverlay = () => {\n    if (showFoodItemOverlay === index) {\n      return setShowFoodItemOverlay(-1);\n    }\n    return setShowFoodItemOverlay(index);\n  };\n\n  // filter out unused fields (explanation fields and mongoDB fields)\n  const foodFields = Object.entries(food)\n    ?.filter(([key]) => !/Explanation|_/.test(key))\n    ?.map(([key, value], i) => {\n      let formatted = value;\n      if (typeof value === 'string' && value.length > 32) {\n        formatted = value.slice(0, 29) + `...`;\n      }\n      return (\n        <span\n          key={`Value_${i}`}\n          className={`${styles.foodListFields} ${\n            value === true && styles.green\n          }`}>\n          {typeof value === 'string' ? formatted : JSON.stringify(value)}\n        </span>\n      );\n    });\n\n  return (\n    <article\n      onClick={handleShowFoodItemOverlay}\n      className={styles.foodListItem}>\n      {foodFields}\n      {showFoodItemOverlay === index && <FoodItemOverlay _id={_id} />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport FoodListItem from './food-list-item';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItems() {\n  const [foods] = useGlobalState('foods');\n  const foodListItems = foods?.map((food, i) => {\n    return <FoodListItem key={`Item_${i}`} food={food} index={i} />;\n  });\n  return <section className={styles.foodListItems}>{foodListItems}</section>;\n}\n","import React from 'react';\n\nexport default function FoodLoading() {\n  return <span>Please wait, loading...</span>;\n}\n","import React, { useEffect } from 'react';\n\nimport FoodError from './food-error';\nimport FoodSuccess from './food-success';\nimport FoodListHeaders from './food-list-headers';\nimport FoodListItems from './food-list-items';\nimport FoodLoading from './food-loading';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodList() {\n  const [, setFoods] = useGlobalState('foods');\n  const [fetched, setFetched] = useGlobalState('fetched');\n  const [error, setError] = useGlobalState('error');\n  const [success, setSuccess] = useGlobalState('success');\n\n  const fetchFoods = async () => {\n    const req = await fetch('/api/food/all');\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setFoods(data);\n      setFetched(true);\n    } else {\n      setError(`Error: ${data}. Please try again later.`);\n      setFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!fetched) {\n      fetchFoods();\n    }\n  });\n\n  useEffect(() => {\n    if (success) {\n      setTimeout(() => setSuccess(''), 3000);\n    }\n    if (error) {\n      setTimeout(() => setError(''), 5000);\n    }\n  });\n\n  return (\n    <article className={styles.foodList}>\n      <h2>Submitted Dishes</h2>\n      <FoodListHeaders />\n      {fetched ? <FoodListItems /> : <FoodLoading />}\n      {error && <FoodError />}\n      {success && <FoodSuccess />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './show-food-form-button.module.css';\n\nexport default function ShowFoodFormButton() {\n  const [showForm, setShowForm] = useGlobalState('showForm');\n  const [, setFormEditable] = useGlobalState('formEditable');\n  const [, setShowFoodItemOverlay] = useGlobalState('showFormItemOverlay');\n\n  const handleShowFormClick = () => {\n    setFormEditable(false);\n    setShowForm(true);\n    setShowFoodItemOverlay(-1);\n  };\n  return (\n    <button\n      className={styles.showFoodFormButton}\n      onClick={handleShowFormClick}\n      disabled={showForm}>\n      Add a dish\n    </button>\n  );\n}\n","import React from 'react';\n\nimport FoodForm from '../../components/add-food/form/food-form';\nimport FoodList from '../../components/add-food/list/food-list';\nimport ShowFoodFormButton from '../../components/add-food/form/show-food-form-button';\nimport { useGlobalState } from '../../state';\n\nimport styles from './add-food.module.css';\n\nconst AddFood = () => {\n  const [showForm] = useGlobalState('showForm');\n  return (\n    <article className={styles.addFoodContainer}>\n      <FoodList />\n      {!showForm && <ShowFoodFormButton />}\n      {showForm && <FoodForm />}\n    </article>\n  );\n};\n\nexport default AddFood;\n","import React from 'react';\n\nimport styles from './game.module.css';\n\nexport default function Game() {\n  return (\n    <article className={styles.game}>\n      <h2>My Celiac Adventure</h2>\n    </article>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport AddFood from '../add-food/add-food';\nimport Game from '../game/game';\n\nimport styles from './app.module.css';\n\nexport default function App() {\n  return (\n    <div className={styles.app}>\n      <Router>\n        <Switch>\n          <Route path=\"/add-food\" component={AddFood} />\n          <Route path=\"/\" component={Game} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}