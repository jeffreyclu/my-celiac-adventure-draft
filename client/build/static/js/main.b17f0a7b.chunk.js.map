{"version":3,"sources":["components/add-food/list/food-list.module.css","components/user-form/base-form.module.css","components/add-food/form/food-input.module.css","components/add-food/form/food-form.module.css","components/user-form/base-input.module.css","components/add-food/form/food-tag.module.css","components/nav/nav.module.css","components/add-food/form/food-tags.module.css","components/add-food/list/food-error.module.css","components/add-food/list/food-success.module.css","components/add-food/list/food-item-overlay.module.css","components/add-food/form/show-food-form-button.module.css","pages/app/app.module.css","state.js","components/add-food/form/food-submit.js","components/add-food/form/food-cancel.js","components/add-food/form/food-input.js","components/add-food/form/food-tag.js","components/add-food/form/food-tags.js","components/add-food/constants.js","components/add-food/form/food-form.js","components/add-food/list/food-error.js","components/add-food/list/food-success.js","components/add-food/list/food-list-headers.js","components/add-food/list/food-item-overlay.js","components/add-food/list/food-list-item.js","components/add-food/list/food-list-items.js","components/add-food/list/food-loading.js","components/add-food/list/food-list.js","components/add-food/form/show-food-form-button.js","pages/add-food/add-food.js","components/game/free-game-container.js","components/game/game-container.js","pages/game/game.js","components/user-form/base-flip-form.js","components/user-form/base-input.js","components/user-form/base-submit.js","components/user-form/constants.js","components/user-form/base-form.js","components/auth/utils/index.js","components/user-form/login-form.js","pages/login/login.js","components/user-form/register-form.js","pages/register/register.js","components/auth/auth-admin.js","pages/login/admin-login.js","components/auth/un-auth.js","components/auth/auth.js","components/profile/user-details.js","pages/profile/profile.js","components/nav/nav-logout.js","components/nav/nav.js","pages/app/app.js","reportWebVitals.js","index.js"],"names":["module","exports","useGlobalState","createGlobalState","showAddFoodForm","addFoodFormFetched","addFoodFormDisabled","addFoodFormEditable","addFoodFormError","addFoodFormSuccess","addFoodFormFoods","addFoodFormSelectedFood","addFoodFormData","showAddFoodFormItemOverlay","userFormData","userFormSuccess","userFormError","userFormInputDisabled","userFormDisabled","loggedIn","isAdmin","currentUser","FoodSubmit","type","value","disabled","FoodCancel","setAddFoodFormSelectedFood","setShowAddFoodForm","setAddFoodFormDisabled","onClick","FoodInput","name","label","handleInputChange","className","styles","foodRow","short","foodLabel","above","foodInput","checked","onChange","placeholder","FoodTag","tag","useState","used","setUsed","setAddFoodFormData","useEffect","i","length","foodTag","newTags","filter","oldTag","push","tags","FoodTags","fetchedTags","setFetchedTags","formTags","setFormTags","setAddFoodFormError","fetchTags","a","localStorage","getItem","cachedTags","JSON","parse","fetch","req","ok","status","statusText","json","resp","success","data","setItem","stringify","tagsList","map","foodTags","addFoodLabels","gluten","glutenExplanation","fructose","fructoseExplanation","lactose","lactoseExplanation","price","baseHunger","baseHealth","breakfast","lunch","dinner","addFoodFormBaseData","FoodForm","setAddFoodFormFetched","setAddFoodFormSuccess","resetFormData","useCallback","activeInputs","foodInputs","input","props","validateForm","handleFormSubmit","e","preventDefault","method","mode","cache","credentials","headers","body","error","target","parseInt","Object","entries","key","test","foodFormModalOverlay","foodFormModal","foodFormContainer","foodForm","onSubmit","foodButtons","FormError","foodError","FoodSuccess","foodSuccess","FoodListHeaders","foodListHeaders","values","header","foodListFields","foodListItem","FoodItemOverlay","_id","setAddFoodFormEditable","handleClickEdit","filtered","mapped","assign","handleClickDelete","foodItemOverlay","FoodListItem","food","index","setShowAddFoodFormItemOverlay","foodFields","formatted","slice","green","FoodListItems","foodListItems","FoodLoading","FoodList","setAddFoodFormFoods","fetchFoods","setTimeout","foodList","ShowFoodFormButton","showFoodFormButton","AddFood","FreeGameContainer","GameContainer","username","Game","BaseFlipForm","pathname","useLocation","to","BaseInput","baseInputRow","baseLabel","baseInput","BaseSubmit","baseFormLabels","email","password","loginFormBaseData","registerFormBaseData","BaseForm","setUserFormDisabled","setUserFormData","formInputs","baseForm","baseButtons","isAuthorized","isAdminAuthorized","LoginForm","adminRequired","setUserFormError","setUserFormSuccess","setUserFormInputDisabled","setLoggedIn","setCurrentUser","setIsAdmin","history","useHistory","historyState","loaded","setLoaded","handleLogin","state","from","formType","Login","RegisterForm","handleRegister","message","Register","AdminAuthorized","location","AdminLogin","Unauthorized","Authorized","UserDetails","Profile","NavLogout","handleLogout","console","log","Nav","nav","App","authStatus","getLoginStatus","app","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17f0a7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodList\":\"food-list_foodList__1reRd\",\"foodListItems\":\"food-list_foodListItems__Vom0L\",\"foodListItem\":\"food-list_foodListItem__2AAim\",\"foodListFields\":\"food-list_foodListFields__1drop\",\"headers\":\"food-list_headers__1zgGb\",\"green\":\"food-list_green__3Ei-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseForm\":\"base-form_baseForm__fFcGB\",\"baseButtons\":\"base-form_baseButtons__edZZ8\",\"success\":\"base-form_success__2KhND\",\"error\":\"base-form_error__3jyA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodRow\":\"food-input_foodRow__3FaJC\",\"foodLabel\":\"food-input_foodLabel__36i1a\",\"short\":\"food-input_short__DWUPW\",\"above\":\"food-input_above__3tFye\",\"foodInput\":\"food-input_foodInput__3PEmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodFormModal\":\"food-form_foodFormModal__1i0xW\",\"foodFormModalOverlay\":\"food-form_foodFormModalOverlay__1g29t\",\"foodFormContainer\":\"food-form_foodFormContainer__3VGNq\",\"foodForm\":\"food-form_foodForm__2gEtH\",\"foodButtons\":\"food-form_foodButtons__2Aahn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseInputRow\":\"base-input_baseInputRow__11po3\",\"baseLabel\":\"base-input_baseLabel__2FYvB\",\"above\":\"base-input_above__MO3Bh\",\"baseInput\":\"base-input_baseInput__ABmzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodTag\":\"food-tag_foodTag__2pFO_\",\"used\":\"food-tag_used__1-LlO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__3AJrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodTags\":\"food-tags_foodTags__38xGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodError\":\"food-error_foodError__2Xmmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodSuccess\":\"food-success_foodSuccess__3NQQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodItemOverlay\":\"food-item-overlay_foodItemOverlay__20Ma9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showFoodFormButton\":\"show-food-form-button_showFoodFormButton__1oBC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__Ohz0O\"};","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  showAddFoodForm: false,\n  addFoodFormFetched: false,\n  addFoodFormDisabled: false,\n  addFoodFormEditable: false,\n  addFoodFormError: '',\n  addFoodFormSuccess: '',\n  addFoodFormFoods: [],\n  addFoodFormSelectedFood: '',\n  addFoodFormData: {},\n  showAddFoodFormItemOverlay: -1,\n  userFormData: {},\n  userFormSuccess: '',\n  userFormError: '',\n  userFormInputDisabled: false,\n  userFormDisabled: false,\n\n  loggedIn: false,\n  isAdmin: false,\n  currentUser: {},\n};\n\nexport const { useGlobalState } = createGlobalState(initialState);\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodSubmit() {\n  const [addFoodFormDisabled] = useGlobalState('addFoodFormDisabled');\n  return <input type=\"submit\" value=\"Submit\" disabled={addFoodFormDisabled} />;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nexport default function FoodCancel() {\n  const [, setAddFoodFormSelectedFood] = useGlobalState(\n    'addFoodFormSelectedFood',\n  );\n  const [, setShowAddFoodForm] = useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormDisabled] = useGlobalState('addFoodFormDisabled');\n\n  const handleClick = () => {\n    setAddFoodFormSelectedFood('');\n    setShowAddFoodForm(false);\n    setAddFoodFormDisabled(true);\n  };\n\n  return <button onClick={handleClick}>Cancel</button>;\n}\n","import React from 'react';\n\nimport styles from './food-input.module.css';\n\nexport default function FoodInput({\n  name,\n  label,\n  type,\n  value,\n  handleInputChange,\n  disabled,\n}) {\n  return (\n    <>\n      <label\n        className={`${styles.foodRow} ${type === 'checkbox' && styles.short}`}>\n        <span\n          className={`${styles.foodLabel} ${\n            (type === 'text' || type === 'number') && styles.above\n          }`}>\n          {label}\n        </span>\n        <input\n          className={`${styles.foodInput}`}\n          name={name}\n          type={type}\n          value={value}\n          checked={value}\n          onChange={handleInputChange}\n          placeholder={`${label} cannot be ${\n            type === 'number' ? 'zero' : 'blank'\n          }`}\n          disabled={disabled}\n        />\n      </label>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-tag.module.css';\n\nexport default function FoodTag({ tag }) {\n  const [used, setUsed] = useState(false);\n  const [addFoodFormData, setAddFoodFormData] =\n    useGlobalState('addFoodFormData');\n  const [addFoodFormEditable] = useGlobalState('addFoodFormEditable');\n\n  // check if current tag is already in the formdata, then set it to used\n  // this is only checked when editing existing an existing dish\n  useEffect(() => {\n    if (addFoodFormEditable) {\n      for (let i = 0; i < addFoodFormData['tags'].length; i += 1) {\n        if (addFoodFormData['tags'][i] === tag) {\n          setUsed(true);\n        }\n      }\n    }\n  }, [addFoodFormData, addFoodFormEditable, tag, setUsed]);\n\n  const handleClick = () => {\n    // copy the existing tags used in the form\n    let newTags = [...addFoodFormData['tags']];\n    if (used) {\n      // if the current tag is used, remove it from the form's tags\n      newTags = newTags.filter((oldTag) => oldTag !== tag);\n      setUsed(false);\n    } else {\n      // otherwise, add it to the form's tags\n      newTags.push(tag);\n      setUsed(true);\n    }\n\n    // update the form data with new tags array\n    setAddFoodFormData({\n      ...addFoodFormData,\n      tags: newTags,\n    });\n  };\n\n  return (\n    <span\n      className={`${styles.foodTag} ${used && styles.used}`}\n      onClick={handleClick}>\n      {tag}\n    </span>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport FoodTag from './food-tag';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-tags.module.css';\n\nexport default function FoodTags() {\n  const [fetchedTags, setFetchedTags] = useState(false);\n  const [formTags, setFormTags] = useState([]);\n  const [setAddFoodFormError] = useGlobalState('addFoodFormError');\n\n  const fetchTags = async () => {\n    // check cache\n    if (localStorage.getItem('tags')) {\n      const cachedTags = JSON.parse(localStorage.getItem('tags'));\n      setFormTags(cachedTags);\n      return setFetchedTags(true);\n    }\n\n    // otherwise make fresh data request\n    const req = await fetch('/api/tag/all');\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n\n    if (success) {\n      // first cache the data\n      localStorage.setItem('tags', JSON.stringify(data));\n      setFormTags(data);\n      setFetchedTags(true);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n      setFetchedTags(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!fetchedTags) {\n      fetchTags();\n    }\n  });\n\n  const tagsList = formTags?.map(({ tag }, i) => {\n    return <FoodTag key={`Tag_${i}`} tag={tag} />;\n  });\n\n  return (\n    <>\n      <section className={styles.foodTags}>{tagsList}</section>\n    </>\n  );\n}\n","export const addFoodLabels = {\n  name: 'Name',\n  gluten: 'Gluten',\n  glutenExplanation: 'Gluten Explanation',\n  fructose: 'Fructose',\n  fructoseExplanation: 'Fructose Explanation',\n  lactose: 'Lactose',\n  lactoseExplanation: 'Lactose Explanation',\n  price: 'Price',\n  baseHunger: 'Base Hunger',\n  baseHealth: 'Base Health',\n  breakfast: 'Breakfast',\n  lunch: 'Lunch',\n  dinner: 'Dinner',\n  tags: 'Tags',\n};\n\nexport const addFoodFormBaseData = {\n  name: '',\n  gluten: 1,\n  glutenExplanation: '',\n  fructose: false,\n  fructoseExplanation: '',\n  lactose: false,\n  lactoseExplanation: '',\n  price: 1,\n  baseHunger: 1,\n  baseHealth: 1,\n  breakfast: false,\n  lunch: false,\n  dinner: false,\n  tags: [],\n};\n","import React, { useCallback, useEffect } from 'react';\n\nimport FoodSubmit from './food-submit';\nimport FoodCancel from './food-cancel';\nimport FoodInput from './food-input';\nimport FoodTags from './food-tags';\nimport { addFoodLabels, addFoodFormBaseData } from '../constants';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-form.module.css';\n\nexport default function FoodForm() {\n  const [, setAddFoodFormFetched] = useGlobalState('addFoodFormFetched');\n  const [, setAddFoodFormDisabled] = useGlobalState('addFoodFormDisabled');\n  const [, setShowAddFoodForm] = useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormError] = useGlobalState('addFoodFormError');\n  const [, setAddFoodFormSuccess] = useGlobalState('addFoodFormSuccess');\n  const [addFoodFormEditable] = useGlobalState('addFoodFormEditable');\n  const [addFoodFormData, setAddFoodFormData] =\n    useGlobalState('addFoodFormData');\n  const [addFoodFormSelectedFood, setAddFoodFormSelectedFood] = useGlobalState(\n    'addFoodFormSelectedFood',\n  );\n\n  const resetFormData = useCallback(() => {\n    setAddFoodFormData(addFoodFormBaseData);\n  }, [setAddFoodFormData]);\n\n  // generate a blank form if not editing an existing food\n  useEffect(() => {\n    if (!addFoodFormEditable) {\n      resetFormData();\n    }\n  }, [resetFormData, addFoodFormEditable]);\n\n  const validateForm = () => {\n    // filter out unused inputs\n    const activeInputs = foodInputs.filter((input) => input !== null);\n    for (let i = 0; i < activeInputs.length; i += 1) {\n      const { type, value } = activeInputs[i].props;\n      // ignore checkboxes and check for blanks\n      if (type !== 'checkbox' && !value) {\n        return setAddFoodFormDisabled(true);\n      }\n    }\n    return setAddFoodFormDisabled(false);\n  };\n\n  // validate form on every change\n  useEffect(() => {\n    validateForm();\n  });\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    setAddFoodFormDisabled(true);\n    let req;\n    if (!addFoodFormEditable) {\n      // if not editing existing data, send new POST request\n      req = await fetch('/api/food/one', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(addFoodFormData),\n      });\n    } else {\n      // otherwise, send PUT request\n      req = await fetch(`/api/food/one/${addFoodFormSelectedFood}`, {\n        method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(addFoodFormData),\n      });\n    }\n\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n\n    const resp = await req.json();\n\n    if (resp.success) {\n      resetFormData();\n      setAddFoodFormFetched(false);\n      setShowAddFoodForm(false);\n      setAddFoodFormSelectedFood('');\n      return setAddFoodFormSuccess(`Success: ${resp.data.name} was edited.`);\n    } else {\n      setAddFoodFormDisabled(false);\n      return setAddFoodFormError(\n        `Error: ${resp.error}. Please try again later.`,\n      );\n    }\n  };\n\n  const handleInputChange = (e) => {\n    let value = e.target.value;\n    // make sure we are using the right value type\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    } else if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setAddFoodFormData({\n      ...addFoodFormData,\n      [e.target.name]: value,\n    });\n  };\n\n  const foodInputs = Object.entries(addFoodFormData)\n    // filter out mongoDB _ keys\n    ?.filter(([key]) => !/_/.test(key))\n    ?.map(([key, value], i) => {\n      // render inputs dynamically based on form data structure\n      let type = 'text';\n      // assign different input type based on input value type\n      if (typeof value === 'boolean') {\n        type = 'checkbox';\n      } else if (typeof value === 'number') {\n        type = 'number';\n      }\n      // hide explanation inputs if not applicable\n      if (key === 'glutenExplanation' && !addFoodFormData['gluten']) {\n        return null;\n      }\n      if (key === 'fructoseExplanation' && !addFoodFormData['fructose']) {\n        return null;\n      }\n      if (key === 'lactoseExplanation' && !addFoodFormData['lactose']) {\n        return null;\n      }\n      return (\n        <FoodInput\n          key={key}\n          name={`Food Input ${i}`}\n          label={addFoodLabels[key]}\n          type={type}\n          value={addFoodFormData[key]}\n          handleInputChange={handleInputChange}\n          disabled={key === 'tags'}\n        />\n      );\n    });\n\n  return (\n    <>\n      <div className={styles.foodFormModalOverlay} />\n      <article className={styles.foodFormModal}>\n        <div className={styles.foodFormContainer}>\n          <h2>{addFoodFormEditable ? 'Edit a dish' : 'Add a dish'}</h2>\n          <form className={styles.foodForm} onSubmit={handleFormSubmit}>\n            {foodInputs}\n            <FoodTags />\n            <section className={styles.foodButtons}>\n              <FoodSubmit />\n              <FoodCancel />\n            </section>\n          </form>\n        </div>\n      </article>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-error.module.css';\n\nexport default function FormError() {\n  const [addFoodFormError] = useGlobalState('addFoodFormError');\n  return <span className={styles.foodError}>{addFoodFormError}</span>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-success.module.css';\n\nexport default function FoodSuccess() {\n  const [addFoodFormSuccess] = useGlobalState('addFoodFormSuccess');\n  return <span className={styles.foodSuccess}>{addFoodFormSuccess}</span>;\n}\n","import React from 'react';\n\nimport { addFoodLabels } from '../constants';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListHeaders() {\n  const foodListHeaders = Object.values(addFoodLabels)\n    // filter out the explanation fields, no need to show them\n    ?.filter((label) => !/Explanation/.test(label))\n    ?.map((header, i) => (\n      <span\n        className={`${styles.foodListFields} ${styles.headers}`}\n        key={`Header_${i}`}>\n        {header}\n      </span>\n    ));\n  return <section className={styles.foodListItem}>{foodListHeaders}</section>;\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\nimport { addFoodFormBaseData } from '../constants';\n\nimport styles from './food-item-overlay.module.css';\n\nexport default function FoodItemOverlay({ _id }) {\n  const [, setAddFoodFormError] = useGlobalState('addFoodFormError');\n  const [, setAddFoodFormData] = useGlobalState('addFoodFormData');\n  const [, setAddFoodFormEditable] = useGlobalState('addFoodFormEditable');\n  const [, setShowAddFoodForm] = useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormFetched] = useGlobalState('addFoodFormFetched');\n  const [, setAddFoodFormSuccess] = useGlobalState('addFoodFormSuccess');\n  const [, setAddFoodFormSelectedFood] = useGlobalState(\n    'addFoodFormSelectedFood',\n  );\n\n  const handleClickEdit = async () => {\n    const req = await fetch(`/api/food/one/${_id}`);\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      // filter out mongoDB _ keys\n      const filtered = Object.entries(data)?.filter(([key]) => !/_/.test(key));\n      // map fetched data to form data shape\n      const mapped = Object.assign({}, addFoodFormBaseData);\n      for (let i = 0; i < filtered.length; i += 1) {\n        const [key, value] = filtered[i];\n        mapped[key] = value;\n      }\n      setAddFoodFormSelectedFood(_id);\n      setAddFoodFormData(mapped);\n      setAddFoodFormEditable(true);\n      setShowAddFoodForm(true);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  const handleClickDelete = async () => {\n    const req = await fetch(`/api/food/one/${_id}`, {\n      method: 'DELETE',\n    });\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setAddFoodFormFetched(false);\n      setAddFoodFormSuccess(`Success: ${data.name} was deleted.`);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n    }\n  };\n\n  return (\n    <section className={styles.foodItemOverlay}>\n      <button onClick={handleClickEdit}>Edit</button>\n      <button onClick={handleClickDelete}>Delete</button>\n    </section>\n  );\n}\n","import React from 'react';\n\nimport FoodItemOverlay from './food-item-overlay';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItem({ food, index }) {\n  const { _id } = food;\n\n  const [showAddFoodFormItemOverlay, setShowAddFoodFormItemOverlay] =\n    useGlobalState('showAddFoodFormItemOverlay');\n\n  const handleShowFoodItemOverlay = () => {\n    if (showAddFoodFormItemOverlay === index) {\n      return setShowAddFoodFormItemOverlay(-1);\n    }\n    return setShowAddFoodFormItemOverlay(index);\n  };\n\n  // filter out unused fields (explanation fields and mongoDB fields)\n  const foodFields = Object.entries(food)\n    ?.filter(([key]) => !/Explanation|_/.test(key))\n    ?.map(([key, value], i) => {\n      let formatted = value;\n      if (typeof value === 'string' && value.length > 32) {\n        formatted = value.slice(0, 29) + `...`;\n      }\n      return (\n        <span\n          key={`Value_${i}`}\n          className={`${styles.foodListFields} ${\n            value === true && styles.green\n          }`}>\n          {typeof value === 'string' ? formatted : JSON.stringify(value)}\n        </span>\n      );\n    });\n\n  return (\n    <article\n      onClick={handleShowFoodItemOverlay}\n      className={styles.foodListItem}>\n      {foodFields}\n      {showAddFoodFormItemOverlay === index && <FoodItemOverlay _id={_id} />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport FoodListItem from './food-list-item';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodListItems() {\n  const [addFoodFormFoods] = useGlobalState('addFoodFormFoods');\n  const foodListItems = addFoodFormFoods?.map((food, i) => {\n    return <FoodListItem key={`Item_${i}`} food={food} index={i} />;\n  });\n  return <section className={styles.foodListItems}>{foodListItems}</section>;\n}\n","import React from 'react';\n\nexport default function FoodLoading() {\n  return <span>Please wait, loading...</span>;\n}\n","import React, { useEffect } from 'react';\n\nimport FoodError from './food-error';\nimport FoodSuccess from './food-success';\nimport FoodListHeaders from './food-list-headers';\nimport FoodListItems from './food-list-items';\nimport FoodLoading from './food-loading';\nimport { useGlobalState } from '../../../state';\n\nimport styles from './food-list.module.css';\n\nexport default function FoodList() {\n  const [, setAddFoodFormFoods] = useGlobalState('addFoodFormFoods');\n  const [addFoodFormFetched, setAddFoodFormFetched] =\n    useGlobalState('addFoodFormFetched');\n  const [addFoodFormError, setAddFoodFormError] =\n    useGlobalState('addFoodFormError');\n  const [addFoodFormSuccess, setAddFoodFormSuccess] =\n    useGlobalState('addFoodFormSuccess');\n\n  const fetchFoods = async () => {\n    const req = await fetch('/api/food/all');\n    if (!req.ok) {\n      const { status, statusText } = req;\n      return setAddFoodFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n    const resp = await req.json();\n    const { success, data } = resp;\n    if (success) {\n      setAddFoodFormFoods(data);\n      setAddFoodFormFetched(true);\n    } else {\n      setAddFoodFormError(`Error: ${data}. Please try again later.`);\n      setAddFoodFormFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!addFoodFormFetched) {\n      fetchFoods();\n    }\n  });\n\n  useEffect(() => {\n    if (addFoodFormSuccess) {\n      setTimeout(() => setAddFoodFormSuccess(''), 3000);\n    }\n    if (addFoodFormError) {\n      setTimeout(() => setAddFoodFormError(''), 5000);\n    }\n  });\n\n  return (\n    <article className={styles.foodList}>\n      <h2>Submitted Dishes</h2>\n      <FoodListHeaders />\n      {addFoodFormFetched ? <FoodListItems /> : <FoodLoading />}\n      {addFoodFormError && <FoodError />}\n      {addFoodFormSuccess && <FoodSuccess />}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../../state';\n\nimport styles from './show-food-form-button.module.css';\n\nexport default function ShowFoodFormButton() {\n  const [showAddFoodForm, setShowAddFoodForm] =\n    useGlobalState('showAddFoodForm');\n  const [, setAddFoodFormEditable] = useGlobalState('addFoodFormEditable');\n  const [, setShowAddFoodFormItemOverlay] = useGlobalState(\n    'showAddFoodFormItemOverlay',\n  );\n\n  const handleShowFormClick = () => {\n    setAddFoodFormEditable(false);\n    setShowAddFoodForm(true);\n    setShowAddFoodFormItemOverlay(-1);\n  };\n  return (\n    <button\n      className={styles.showFoodFormButton}\n      onClick={handleShowFormClick}\n      disabled={showAddFoodForm}>\n      Add a dish\n    </button>\n  );\n}\n","import React from 'react';\n\nimport FoodForm from '../../components/add-food/form/food-form';\nimport FoodList from '../../components/add-food/list/food-list';\nimport ShowFoodFormButton from '../../components/add-food/form/show-food-form-button';\nimport { useGlobalState } from '../../state';\n\nconst AddFood = () => {\n  const [showAddFoodForm] = useGlobalState('showAddFoodForm');\n  return (\n    <>\n      <FoodList />\n      {!showAddFoodForm && <ShowFoodFormButton />}\n      {showAddFoodForm && <FoodForm />}\n    </>\n  );\n};\n\nexport default AddFood;\n","import React from 'react';\n\nimport { useGlobalState } from '../../state';\n\nexport default function FreeGameContainer() {\n  return (\n    <>\n      <h2>My Celiac Adventure</h2>\n      <h3>Welcome!</h3>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../state';\n\nexport default function GameContainer() {\n  const [currentUser] = useGlobalState('currentUser');\n  return (\n    <>\n      <h2>My Celiac Adventure</h2>\n      {<h3>Welcome {currentUser.username}!</h3>}\n    </>\n  );\n}\n","import React from 'react';\nimport FreeGameContainer from '../../components/game/free-game-container';\nimport GameContainer from '../../components/game/game-container';\n\nimport { useGlobalState } from '../../state';\n\nexport default function Game() {\n  const [loggedIn] = useGlobalState('loggedIn');\n\n  return <>{loggedIn ? <GameContainer /> : <FreeGameContainer />}</>;\n}\n","import React from 'react';\n\nimport { useLocation, Link } from 'react-router-dom';\n\nexport default function BaseFlipForm() {\n  const { pathname } = useLocation();\n  return (\n    <>\n      {/login/.test(pathname) ? (\n        <Link to=\"/register\">Register Instead</Link>\n      ) : (\n        <Link to=\"/login\">Login Instead</Link>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { useGlobalState } from '../../state';\n\nimport styles from './base-input.module.css';\n\nexport default function BaseInput({\n  label,\n  name,\n  type,\n  value,\n  handleInputChange,\n}) {\n  const [userFormInputDisabled] = useGlobalState('userFormInputDisabled');\n  return (\n    <label className={styles.baseInputRow}>\n      <span className={`${styles.baseLabel} ${styles.above}`}>{label}</span>\n      <input\n        className={styles.baseInput}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={`${label} cannot be ${\n          type === 'number' ? 'zero' : 'blank'\n        }`}\n        onChange={handleInputChange}\n        disabled={userFormInputDisabled}></input>\n    </label>\n  );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function BaseSubmit() {\n  const { pathname } = useLocation();\n  const [userFormDisabled] = useGlobalState('userFormDisabled');\n  return (\n    <input\n      type=\"submit\"\n      value={/login/.test(pathname) ? 'Login' : 'Register'}\n      disabled={userFormDisabled}\n    />\n  );\n}\n","export const baseFormLabels = {\n  username: 'Username',\n  email: 'Email',\n  password: 'Password',\n};\n\nexport const loginFormBaseData = {\n  username: '',\n  password: '',\n};\n\nexport const registerFormBaseData = {\n  username: '',\n  email: '',\n  password: '',\n};\n","import React, { useEffect } from 'react';\n\nimport BaseFlipForm from './base-flip-form';\nimport BaseInput from './base-input';\nimport BaseSubmit from './base-submit';\nimport { baseFormLabels } from './constants';\nimport { useGlobalState } from '../../state';\n\nimport styles from './base-form.module.css';\n\nexport default function BaseForm({ handleFormSubmit }) {\n  const [, setUserFormDisabled] = useGlobalState('userFormDisabled');\n  const [userFormData, setUserFormData] = useGlobalState('userFormData');\n\n  const validateForm = () => {\n    const activeInputs = formInputs.filter((input) => input !== null);\n    for (let i = 0; i < activeInputs.length; i += 1) {\n      const { type, value } = activeInputs[i].props;\n      // ignore checkboxes and check for blanks\n      if (type !== 'checkbox' && !value) {\n        return setUserFormDisabled(true);\n      }\n    }\n    return setUserFormDisabled(false);\n  };\n\n  useEffect(() => {\n    validateForm();\n  });\n\n  const handleInputChange = (e) => {\n    let value = e.target.value;\n    // make sure we are using the right value type\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    } else if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setUserFormData({\n      ...userFormData,\n      [e.target.name]: value,\n    });\n  };\n\n  const formInputs = Object.entries(userFormData)?.map(([key], i) => {\n    // render inputs dynamically based on form data structure\n    let type = 'text';\n    if (key === 'email' || key === 'password') {\n      type = key;\n    }\n    return (\n      <BaseInput\n        key={`Base Input ${i}`}\n        name={key}\n        label={baseFormLabels[key]}\n        type={type}\n        value={userFormData[key]}\n        handleInputChange={handleInputChange}\n      />\n    );\n  });\n\n  return (\n    <form className={styles.baseForm} onSubmit={handleFormSubmit}>\n      {formInputs}\n      <section className={styles.baseButtons}>\n        <BaseSubmit />\n        <BaseFlipForm />\n      </section>\n    </form>\n  );\n}\n","export const isAuthorized = async () => {\n  try {\n    const req = await fetch(`/api/auth`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n    if (!req.ok) {\n      return false;\n    }\n    const resp = await req.json();\n    if (!resp.success) {\n      return false;\n    }\n    return resp;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const isAdminAuthorized = async () => {\n  try {\n    const req = await fetch(`/api/auth-admin`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n    if (!req.ok) {\n      return false;\n    }\n    const resp = await req.json();\n    if (!resp.success) {\n      return false;\n    }\n    return resp;\n  } catch (err) {\n    return err;\n  }\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Redirect, useHistory, useLocation } from 'react-router';\n\nimport BaseForm from './base-form';\nimport { loginFormBaseData } from './constants';\nimport { useGlobalState } from '../../state';\nimport { isAdminAuthorized } from '../auth/utils';\n\nimport styles from './base-form.module.css';\n\nexport default function LoginForm({ adminRequired }) {\n  const [userFormData, setUserFormData] = useGlobalState('userFormData');\n  const [userFormError, setUserFormError] = useGlobalState('userFormError');\n  const [userFormSuccess, setUserFormSuccess] =\n    useGlobalState('userFormSuccess');\n  const [, setUserFormDisabled] = useGlobalState('userFormDisabled');\n  const [, setUserFormInputDisabled] = useGlobalState('userFormInputDisabled');\n  const [loggedIn, setLoggedIn] = useGlobalState('loggedIn');\n  const [, setCurrentUser] = useGlobalState('currentUser');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n  const history = useHistory();\n  const historyState = useLocation();\n  const [loaded, setLoaded] = useState(false);\n\n  const resetFormData = useCallback(() => {\n    setUserFormData(loginFormBaseData);\n    setUserFormDisabled(false);\n    setUserFormInputDisabled(false);\n    setUserFormError('');\n    setUserFormSuccess('');\n  }, [\n    setUserFormData,\n    setUserFormDisabled,\n    setUserFormInputDisabled,\n    setUserFormError,\n    setUserFormSuccess,\n  ]);\n\n  useEffect(() => {\n    if (userFormSuccess) {\n      setTimeout(() => setUserFormSuccess(''), 3000);\n    }\n    if (userFormError) {\n      setTimeout(() => setUserFormError(''), 5000);\n    }\n  });\n\n  useEffect(() => {\n    if (!loaded) {\n      resetFormData();\n      setLoaded(true);\n    }\n  }, [setLoaded, loaded, resetFormData]);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setUserFormDisabled(true);\n    setUserFormInputDisabled(true);\n    const req = await fetch('/api/login', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userFormData),\n    });\n\n    if (req.status === 401) {\n      resetFormData();\n      return setUserFormError('Username or password is invalid.');\n    }\n\n    if (!req.ok) {\n      const { status, statusText } = req;\n      resetFormData();\n      return setUserFormError(\n        `${status} error: ${statusText}. Please try again later.`,\n      );\n    }\n\n    const resp = await req.json();\n\n    if (!resp.success) {\n      resetFormData();\n      return setUserFormError(`Error: ${resp.error}. Please try again later.`);\n    }\n\n    if (adminRequired) {\n      const adminAuthorized = await isAdminAuthorized();\n      if (!adminAuthorized) {\n        setIsAdmin(false);\n        setLoggedIn(false);\n        resetFormData();\n        return setUserFormError(`Error: you are not an administrator.`);\n      }\n      setIsAdmin(true);\n    }\n\n    setLoggedIn(true);\n    setCurrentUser(resp.data);\n    resetFormData();\n    setUserFormSuccess(`Success: logged in. Automatically redirecting.`);\n    return setTimeout(\n      () => history.push(historyState?.state?.from?.pathname || '/'),\n      1000,\n    );\n  };\n\n  if (loggedIn)\n    return <Redirect to={historyState?.state?.from?.pathname || '/'} />;\n\n  return (\n    <>\n      {loaded && <BaseForm formType=\"login\" handleFormSubmit={handleLogin} />}\n      {userFormSuccess && (\n        <span className={styles.success}>{userFormSuccess}</span>\n      )}\n      {userFormError && <span className={styles.error}>{userFormError}</span>}\n    </>\n  );\n}\n","import React from 'react';\nimport LoginForm from '../../components/user-form/login-form';\n\nexport default function Login() {\n  return (\n    <>\n      <h2>Login</h2>\n      <h3>Please login to view this page.</h3>\n      <LoginForm />\n    </>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport BaseForm from './base-form';\nimport { registerFormBaseData } from './constants';\nimport { useGlobalState } from '../../state';\n\nimport styles from './base-form.module.css';\n\nexport default function RegisterForm() {\n  const [userFormData, setUserFormData] = useGlobalState('userFormData');\n  const [userFormError, setUserFormError] = useGlobalState('userFormError');\n  const [userFormSuccess, setUserFormSuccess] =\n    useGlobalState('userFormSuccess');\n  const [, setUserFormDisabled] = useGlobalState('userFormDisabled');\n  const [, setUserFormInputDisabled] = useGlobalState('userFormInputDisabled');\n  const [, setLoggedIn] = useGlobalState('loggedIn');\n  const [, setCurrentUser] = useGlobalState('currentUser');\n  const history = useHistory();\n  const historyState = useLocation();\n  const [loaded, setLoaded] = useState(false);\n\n  const resetFormData = useCallback(() => {\n    setUserFormData(registerFormBaseData);\n    setUserFormDisabled(false);\n    setUserFormInputDisabled(false);\n    setUserFormError('');\n    setUserFormSuccess('');\n  }, [\n    setUserFormData,\n    setUserFormDisabled,\n    setUserFormInputDisabled,\n    setUserFormError,\n    setUserFormSuccess,\n  ]);\n\n  useEffect(() => {\n    if (userFormSuccess) {\n      setTimeout(() => setUserFormSuccess(''), 3000);\n    }\n    if (userFormError) {\n      setTimeout(() => setUserFormError(''), 5000);\n    }\n  });\n\n  useEffect(() => {\n    if (!loaded) {\n      resetFormData();\n      setLoaded(true);\n    }\n  }, [setLoaded, loaded, resetFormData]);\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setUserFormDisabled(true);\n    setUserFormInputDisabled(true);\n    const req = await fetch('/api/register', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userFormData),\n    });\n\n    if (!req.status === 201) {\n      const { status, message } = req;\n      resetFormData();\n      return setUserFormError(`${status} error: ${message}.`);\n    }\n\n    const resp = await req.json();\n\n    if (!resp.success) {\n      resetFormData();\n      return setUserFormError(`Error: ${resp.error}. Please try again later.`);\n    }\n\n    setLoggedIn(true);\n    setCurrentUser(resp.data);\n    resetFormData();\n    setUserFormSuccess(`Successfully registered user ${resp.data.username}`);\n    return history.push(historyState?.state?.from?.pathname || '/');\n  };\n\n  return (\n    <>\n      {loaded && (\n        <BaseForm formType=\"register\" handleFormSubmit={handleRegister} />\n      )}\n      {userFormSuccess && (\n        <span className={styles.success}>{userFormSuccess}</span>\n      )}\n      {userFormError && <span className={styles.error}>{userFormError}</span>}\n    </>\n  );\n}\n","import React from 'react';\n\nimport RegisterForm from '../../components/user-form/register-form';\n\nexport default function Register() {\n  return (\n    <>\n      <h2>Register</h2>\n      <h3>Create a new account to get started.</h3>\n      <RegisterForm />\n    </>\n  );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function AdminAuthorized({ location, ...props }) {\n  const [loggedIn] = useGlobalState('loggedIn');\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  return (\n    <>\n      {loggedIn && isAdmin ? (\n        <Route {...props} />\n      ) : (\n        <Redirect\n          to={{ pathname: '/admin-login', state: { from: location } }}\n        />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport LoginForm from '../../components/user-form/login-form';\n\nexport default function AdminLogin() {\n  return (\n    <>\n      <h2>Admin Login</h2>\n      <h3>You must be an administrator to view this page.</h3>\n      <LoginForm adminRequired={true} />\n    </>\n  );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function Unauthorized({ location, ...props }) {\n  const [loggedIn] = useGlobalState('loggedIn');\n\n  return (\n    <>\n      {loggedIn ? (\n        <Redirect to={{ pathname: '/', state: { from: location } }} />\n      ) : (\n        <Route {...props} />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function Authorized({ location, ...props }) {\n  const [loggedIn] = useGlobalState('loggedIn');\n\n  return (\n    <>\n      {loggedIn ? (\n        <Route {...props} />\n      ) : (\n        <Redirect to={{ pathname: '/login', state: { from: location } }} />\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nimport { useGlobalState } from '../../state';\n\nexport default function UserDetails() {\n  const [currentUser] = useGlobalState('currentUser');\n  const { username, email } = currentUser;\n  return (\n    <>\n      <article>\n        <p>{username}</p>\n        <p>{email}</p>\n      </article>\n    </>\n  );\n}\n","import React from 'react';\n\nimport UserDetails from '../../components/profile/user-details';\n\nexport default function Profile() {\n  return <UserDetails />;\n}\n","import React from 'react';\nimport { useHistory } from 'react-router';\n\nimport { useGlobalState } from '../../state';\n\nexport default function NavLogout() {\n  const [loggedIn, setLoggedIn] = useGlobalState('loggedIn');\n  const [currentUser, setCurrentUser] = useGlobalState('currentUser');\n  const history = useHistory();\n  const handleLogout = async () => {\n    if (!loggedIn) {\n      return; // TODO handle already logged in error\n    }\n    const req = await fetch('/api/logout', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(currentUser),\n    });\n    if (!req.ok) {\n      return; // TODO handle logout error message\n    }\n    const resp = await req.json();\n    if (!resp) {\n      return; // TODO handle logout error message\n    }\n    const { success, message } = resp;\n    if (!success) {\n      console.log(message);\n      return; // TODO handle logout error message\n    }\n    setCurrentUser({});\n    setLoggedIn(false);\n    return history.push('/');\n  };\n  return <button onClick={handleLogout}>Logout</button>;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useGlobalState } from '../../state';\nimport NavLogout from './nav-logout';\n\nimport styles from './nav.module.css';\n\nexport default function Nav() {\n  const [loggedIn] = useGlobalState('loggedIn');\n  if (loggedIn) {\n    return (\n      <nav className={styles.nav}>\n        <Link to=\"/\">Play</Link>\n        <Link to=\"/profile\">Profile</Link>\n        <NavLogout />\n      </nav>\n    );\n  }\n\n  return (\n    <nav className={styles.nav}>\n      <Link to=\"/\">Play</Link>\n      <Link to=\"/register\">Register</Link>\n      <Link to=\"/login\">Login</Link>\n    </nav>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport AddFood from '../add-food/add-food';\nimport Game from '../game/game';\nimport Login from '../login/login';\nimport Register from '../register/register';\nimport AdminAuthorized from '../../components/auth/auth-admin';\nimport AdminLogin from '../login/admin-login';\nimport Unauthorized from '../../components/auth/un-auth';\nimport Authorized from '../../components/auth/auth';\nimport Profile from '../profile/profile';\nimport Nav from '../../components/nav/nav';\nimport { useGlobalState } from '../../state';\nimport {\n  isAuthorized,\n  isAdminAuthorized,\n} from '../../components/auth/utils/index';\n\nimport styles from './app.module.css';\n\nexport default function App() {\n  const [loggedIn, setLoggedIn] = useGlobalState('loggedIn');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n  const [, setCurrentUser] = useGlobalState('currentUser');\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const getLoginStatus = async () => {\n      const authStatus = await isAuthorized();\n      if (authStatus.success) {\n        setLoggedIn(true);\n        setCurrentUser(authStatus.data);\n      }\n      const adminStatus = await isAdminAuthorized();\n      if (adminStatus.success) {\n        setIsAdmin(true);\n      }\n      setLoaded(true);\n    };\n\n    getLoginStatus();\n  }, [loggedIn, setLoggedIn, setCurrentUser, setIsAdmin]);\n\n  return (\n    <div className={styles.app}>\n      {loaded && (\n        <>\n          <Router>\n            <Nav />\n            <Switch>\n              <AdminAuthorized path=\"/add-food\" component={AddFood} />\n              <Route path=\"/admin-login\" component={AdminLogin} />\n              <Unauthorized path=\"/login\" component={Login} />\n              <Unauthorized path=\"/register\" component={Register} />\n              <Authorized path=\"/profile\" component={Profile} />\n              <Route path=\"/\" component={Game} />\n            </Switch>\n          </Router>\n        </>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}